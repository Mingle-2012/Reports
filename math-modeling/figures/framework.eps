%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: mathmodeling.pdf
%%Creator: Adobe Acrobat 22.1.0
%%For: XiaoWu
%%CreationDate: 2024/12/29, 12:43:07
%%BoundingBox: 0 0 724 470
%%HiResBoundingBox: 0 0 723.8821 469.1829
%%CropBox: 0 0 723.8821 469.1829
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1132 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.425dc87, 2021/10/27-16:20:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® 2021"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® 2021"
   xmp:CreateDate="2024-12-29T12:42:27+08:00"
   xmp:ModifyDate="2024-12-29T12:42:27+08:00"
   xmpMM:DocumentID="uuid:F422968C-00F9-4EF3-8D9D-C2A93B343CAA"
   xmpMM:InstanceID="uuid:F422968C-00F9-4EF3-8D9D-C2A93B343CAA">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>泽恺 武</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -469.183 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
3.05175e-05 0 mo
3.05175e-05 469.183 li
723.882 469.183 li
723.882 0 li
cp
clp
gsave
-.229492 469.434 mo
724.771 469.434 li
724.771 -.565735 li
-.229492 -.565735 li
cp
clp
gsave
-55.2295 539.434 mo
786.57 539.434 li
786.57 -55.7659 li
-55.2295 -55.7659 li
cp
eclp
.25 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
-55.2295 539.51 mo
786.661 539.51 li
786.661 -55.7703 li
-55.2295 -55.7703 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.216 sep
@
grestore
256.581 161.794 mo
256.581 133.224 233.421 110.064 204.85 110.064 cv
176.281 110.064 153.121 133.224 153.121 161.794 cv
153.121 190.364 176.281 213.524 204.85 213.524 cv
233.421 213.524 256.581 190.364 256.581 161.794 cv
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
.609125 .120363 .888151 0 cmyk
ef
.25 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
256.581 161.794 mo
256.581 133.224 233.421 110.064 204.85 110.064 cv
176.281 110.064 153.121 133.224 153.121 161.794 cv
153.121 190.364 176.281 213.524 204.85 213.524 cv
233.421 213.524 256.581 190.364 256.581 161.794 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
.000732433 0 0 0 cmyk
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (NGLFJR+STFangsong-GBK-EUC-H)
%%Title: (NGLFJR+STFangsong-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /NGLFJR+STFangsong-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -315 1063 986} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 25185 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
16839 <001C60D8A8C9B5EE31025DA2FDC7D534637F7C0E915DDD271EF4AA981
57482422854E8A77F56DB60E877B4730FAC333B7570B697E21A7AA6610B32B5A
D43127077B62EBF06B8071DF91F9C7845659CA62D60878C4B23A7662CD2E8A23
22FADE33539CA1AF5FA17E6E4155999CCB93A69E13177B61E4F029AF88A2F880
564D1B86539D1C909AEA47747473E702042E0E21479ABFFEA17A357B43E08958
DCA528604667B7D372D08296707140F886C789E088ADA303D23D5F4D734C0A6B
70B22D7F92A33E9BF0C558D0C5F962F9BAE445264576A2293353B27CFDC17855
F83A98D9C64E3A86C3DBCA4DD0E8783972DA156A0C17B6713876C5C2617F4B2A
780B4B62165EFB530CA40E68159F594B7849C8A08C2C6FC6A210585A90DCD38F
B86A4D9E081FCAA7C0B12081892A985D27D6CFF1EA5B980D0CFD322> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /NGLFJR+STFangsong-GBK-EUC-H-Identity-H /Identity-H 0 [/NGLFJR+STFangsong-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
168.861 167.244 mo
(A\307)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
168.861 167.244 mo
(A\307) false chp
.51429 lw
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
16868 <001C60D8A8C9B5EE31038BF4CEDF988A436EEB03293E2E3593C8AC8CC
E0B33B0EF52ED2F082AB534031B8946338C3BA3A6E59F3D43F9CFE102D6DC9C4
F3693E6973E3029DD7CBB7CF67088F046A2250431395D3B39F917971FDCA3CA7
551FCF225BFD975729F4BAD6C62AC5514232C451D44DF9873E4236A322AF4D22
FA8937B64AF8CBAB6D7613383DEDB48232F17873F2D3FC9C8C99C1F326F19D08
C81DE745A624275B9D1583F093E51896AAE5DA40D4DF6D8F42285AA55B509ED8
EA4ECD1D989E358A60378A583D0BC0168453A6083CC49D612E2538C7C88FB603
90B01A7DA9948B1954347C79A8F93565466B1D0A4C0DDA9F2CEEFA06EC3DAD4E
A0511A3FCDEFB388AA3FFF0C5D4A0CDC84128930832D9A164818A6668C8E5E36
68E7DD05FB33F8DC55D13D796A9AC97EB837BDAED8CEEDED15A37A58E556A> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
186.861 167.244 mo
(A\344)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
186.861 167.244 mo
(A\344) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
13956 <001C60D8A8C9B5EE3100ABF0E37DECEC07A434693D0EB5B991DB10F43
224A3D02BB38CB80BCB9030811D53FFEFFB62A35589205B541A67377DB8BFE32
D0205C84E1F59ED2D98663FD1CD24EFE82BCF7A3D0E484F96789EA1FD601136E
7B40A211B843831AF5BBF151D633A0A28497A5A1E43AF114FBF781B54D46FA47
3FA1EBF4986806AF890828E7AEE2C0720010CFF86F9989D54525DF2222BB1ABF
D18233EEB991310B965403A4ABC34836C3BEFE0E18F8CCAABFE002B979D65C0E
9E7861CAEE0F1B41C858F75213C37D28FC055F4046B1F31E2F0D10259A42B4F8
988E3C1E0C5FDE657F882B37374F1556A1E0CDE1353C8FF8E2A2E4D487AE41AE
5DF1A85F415C56B83AFFE36C073FDA088A297548CFDA663DC19C0CD05F0F817F
39EAB6B9F9964F6B0F00F9DE22A52C28367FE0AC4F490CFFAF8D97F2EFA1897D
66FE74D79AA127E3386059959CF5E7D29B30D12A7A6518983DFDB7F4FA784875
9D7A27BB0F19CA8B5A33F094B551E04E4712B5C6C14F75B8D3C2F4E30F45FBC9
194F71959E62159B6E429C6A7EB0A0E932EED25DEE3E480D45ACAFCB288F365F
AD7E164367F85532FE492047FEDC33C9435BD7AD0A1CF242F2A569F1F2883500
0E6D44DE40B27480DA66478502B580EF505900BF7F071286F0C395E2B7DC332A
EADC0D67EDA2515EBC0366566CE1EE4AB85E371C5BC80863D4F9AA88ADC174AB
0C36B568B07D4634E00C7D5676B1346174E68749BBA311F38EBD33BC431354E9
EAE95B2A72F9C9010B8D6155365D16B855CE30F3A0663D2168357E244A4B2B48
0C2F6359F3546F865E9D6E2DA7E14EF0185DF82BCE5BE2B144301C896EE2C8A2
BAAEDAEE48261934D86F6AD2704635BF1C8A6CCC623C314762CA38191A201CFF
CF6E03AB569F13EAB256EFC86891007055C25> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
204.861 167.244 mo
(6\204)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
204.861 167.244 mo
(6\204) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
16302 <001C60D8A8C9B5EE31038FBFBFB98588EBFDA38F45DDE88FE57E01548
4B4EF173AD1AFEB7F88A4A070DD9C8BE8655FAC6552493904E4C1793A17A73A5
BAA643ADEF14559B11BB077BF888BB7865679E4D73C5C3427AB652EB7CFF48CC
2E345EAA40E5A4ED744A53A41E1BD1143FF48F110E3AA5B04B94D7AB9D0904FD
128E11647EF92FB13DD7C2F565C2097112729BB9D6DD59617564BA4E5D12EA95
BC93643E10333423555452AD3ACE1F64957507D675AF3B2E24DAE16F4F579D20
ABA927443BA8F652884D8B4E7CFC1B4EBAB90491AC3B0032727D02172E2739E7
84C1F043DBC4A7C63B9855F6592B4E7D2D0960F8FE285A71DDF65354C91296A1
713FC83D90A12265B7960BCC761DF440353493F1CE38FA30D822061452CEE2A1
3834C9C9DEE421AA9E3360948A2B57B5B4F64075B9B7C513A4D6BBC750C02DC9
23553785A1AE0D23B141E2A277D4D93A4B837232CE60882D8D54203218C47A5F
67132305BDEAED63D54A541F22C3D3BD3941248B251C3C9CD13A537273B32DB2
570C1EF30260E2F8A3D9CB8F99EDE30D7E9DCD5DA324929AE69453AD14CD5C69
03A12D3FDA50934C6784A2098B4A0B250F4732DEE3C7DCCFF2302D150262A7B9
C8436576CC2ED7924EB356865B0447A9E1CB3ACD3DAE2686910E67D13E07C63C
9508E38AF252826D80735717E84033EA2F9> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
222.861 167.244 mo
(?\256)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
222.861 167.244 mo
(?\256) false chp
@
492.57 71.7943 mo
492.57 43.2243 469.401 20.0643 440.831 20.0643 cv
412.26 20.0643 389.1 43.2243 389.1 71.7943 cv
389.1 100.364 412.26 123.524 440.831 123.524 cv
469.401 123.524 492.57 100.364 492.57 71.7943 cv
cp
.609125 .120363 .888151 0 cmyk
ef
.25 lw
492.57 71.7943 mo
492.57 43.2243 469.401 20.0643 440.831 20.0643 cv
412.26 20.0643 389.1 43.2243 389.1 71.7943 cv
389.1 100.364 412.26 123.524 440.831 123.524 cv
469.401 123.524 492.57 100.364 492.57 71.7943 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
.000732433 0 0 0 cmyk
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
13984 <001C60D8A8C9B5EE3103BC6922F5432178A956BB4082AAF4CC0D7DC8C
68A74D34F4E6C74B1F4F81129F7FFF2633AEC5787B31929193D6A81A104C9236
4C5B33FF7135B99318B54D88304E8FC08FEA969B87CCFEE1BE84FCEE8C48B058
A11BB94E5688A8AE9C4205C6E67703B3F382160F451F9573FB86587B2B1097CE
5355B1305BAFD7DC5F03AB69B0FDB1242C3FDD2C6F70D980F116334858775027
AB3E18252E728D95226807212CFF24A3BFDB3C5B09D7AF4D0D66342727474523
53237541009F39DA8DE35303CDAEF80138347DF8E718468089610BD5AFFB566B
2> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
404.871 77.2143 mo
(6\240)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
404.871 77.2143 mo
(6\240) false chp
.51429 lw
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
10379 <001C60D8A8C9B5EE3102741E4CFAB8EEACD7DBC598AA7A50DE59565F3
F5A0658813B342692B3CA97CB10263D016BC609A6ED2EE0BAF72450235576386
C266176C190E43953DD7CBC1AE1B290303DD598277529A3416A4C34B1337D1B7
BD363F212D046C1FB76DC37E548C0730CC44EAB0D09173E978AFB89D138203DE
3139F714753D07EE3AEA59539ED69A2430D5BF5C90E150709275BFC511024F6D
0DD77FD8613303EBEEF58D73DA83A5A94CC90DE287789CD6B8C1D1B9B3EC94C8
6C8204CE30A5BEA7AE1FB60C6465CEA293DDA6147FD7784E3A3EBC14B3768D18
07D383F0727EF43F2CC72A7509FD15F0A81A6148E8B9F079F41BD4FD3D72187F
25BC53639D5EC7DF22C2B0DC5B10649F99B81628220C363F641C026A6B645899
F6A670E96E38B8AF804A220F2492EBE4FA631D0407BF5A7031213E7C6A7EFAB2
BC136211BF30B7E6FC53211A8B9F725225EA23F4A6352EA0645C4179F2A05588
34ACE3C22D461F2493F85EAA659234DDC7A31EF97A5F03A9B5411F9AF42BF500
68587E3C8A4B651E7B60CAE20371DD91FAF2E13CFF28072427F7391C9F42E027
1C10E4E8917ED721FB0A7ABDDC0364076DB8C> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
422.871 77.2143 mo
(\(\213)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
422.871 77.2143 mo
(\(\213) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
14985 <001C60D8A8C9B5EE31038AC6E3A8368CDBFFD3A921D59F2D947A74F03
6F56BA909263B84D2343245C946590066FA416D57A0DF317CE84F579483A4BA1
1DF93BBF1C05686A5BF06B782DFC874DFDCF6CEBE33778D800907CA3DB846AFE
A3D1C21CCC90F1A811EA8CAC0BE901E130E363C6233CE6B9F30F88D1B810547C
4655A918859A5891198F34907A0293F9D41300198D3F25BDFD0831C00B189929
899BB3B367289F0B1C7EFE7820803CDEC4D71620F301C7053334161232C3ECE7
DFD815D76DFE404F917B276ADD57162590DE1716DBDAB7C08A4F69CB630C714C
1D822B559CF910EE04EEDA6F14988667A4064336ADBA066DB22082818AE32870
D8B9F4A2EC3BB21008D84299282C4440B074295A1FBFD00FA9874D6773181CAB
DD8AFB46EF9834A5013A8661DD7BB413FB8713876BCD2CF88C7FB26919AD29C7
1B6C42F144B83BA8843DF90E04374952FF60A0F9C547DC034083C3BE12CB56EC
5C462CA1D8D4A46622C9B7D857AA4FF60619DF46E57CF3D3856274459EC554F6
468BE2AB3C84C47F6FE09D553F3D2F2B457390EAD0353963E02B714FB8502CA4
20B1B5DFE633111F9508D9E79DB401E605362AE8AE0CC012175FE59D8CBFFC95
731630F3423> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
440.871 77.2143 mo
(:\211)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
440.871 77.2143 mo
(:\211) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
11273 <001C60D8A8C9B5EE310269F1D2B009398425612FE61F58133FA3A54C2
AAC6908FF08ECA77CE05A1651977CCC6FA10C5769CD3263773739A3C3B5A658F
08DFD5CD5FF9C8C82DA9D80F5EA611F61237A4D6933489DA23B4D8F720751DB4
A34D7E50480FE0EA9BA507F27F89C09138919F51B59A052405556046898DB068
4E3A900024D821E6ED082764AEDF3C2B61C9C706557D528662667C8E09C6E79D
F3C081C83FA7AB92B6B4B65BB6538E091EBBBEB2223DF726E9DD7529FE14D63A
12878B7FD46FF97B70C335C5F6EDE6DDA898B2D22FA3FE04A451B41ED2424ACD
522B59452279B22F186F874D364DCBA506830C500448182483EC47665F8ACAF1
04A1226BE63C541E279B3EB6DB93CB3BEFAD0014A81B0CDA70AC1A266B99AEC2
77F5001E7C3E29079FF327C2BE0097247B85F48CEC4B8A377827BCF8F56E1C66
7D40DAE79513CBA> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
458.87 77.2143 mo
(,\011)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
458.87 77.2143 mo
(,\011) false chp
@
591.781 289.354 mo
591.781 260.784 568.62 237.624 540.051 237.624 cv
511.471 237.624 488.31 260.784 488.31 289.354 cv
488.31 317.924 511.471 341.084 540.051 341.084 cv
568.62 341.084 591.781 317.924 591.781 289.354 cv
cp
.609125 .120363 .888151 0 cmyk
ef
.25 lw
591.781 289.354 mo
591.781 260.784 568.62 237.624 540.051 237.624 cv
511.471 237.624 488.31 260.784 488.31 289.354 cv
488.31 317.924 511.471 341.084 540.051 341.084 cv
568.62 341.084 591.781 317.924 591.781 289.354 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
.000732433 0 0 0 cmyk
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
15719 <001C60D8A8C9B5EE31009E059AD5DFA3825DA5F4132A8598824D7C41F
C3856DE6213A6E7E215EE317DAA56AF1E78DBD0F19DEECDEA5FE52C5317EDB90
2EBEA02508E022AD6F9A99343D3EEE5ADDD074A14E8E7EF404621922FBCF3C4E
B8FFAC652E8324F970C39D3C770D3DA84D00B84A190E773D167B5300698FD76B
5E3B310E60F0E8D2206EE4007257E78E57DB021F0FED5D18FE25A02388702F6D
CF3688CDCC9E7776D1DB2C40386B19C7A95B8BE7094364BDFC3A55DD7C7A8000
A4FC37C86F5CBB4A65CD21E833AD7E9A03B5138C5A467A9F777F10581BD2F0B4
B0B9F772E11E1750B24A75894574AEE7318287DF1F0BED637127D96BFE4C4CF1
9FC895CDB5587C4BEB3EC5DF8D3F5E5C9FE84EA66F833B68E82D57ABFC24F62F
3BC72BD188B23F4C8BA4D88C3F76CE5BBF8149A22419B1B604B9D178ED4A6C6A
64BECB4861C5185CBCB6D0ACF2CE7858E2E2E35F6D5F356A6A414884022511E9
E63004BCF3974941AD4B8F1C5096AB8FC2CF0079E040FE473CB0599DD2F59610
602B12C873FF38B29A277B2B1AD3664A41112A2EBAA0A359535F9D7F8162FC2B
42926DC00BB2B0F7B4080D857C158BE398293F0544E4F9D8F7458B048D138E01
F7A4750319B210F528DCE123D4CF2B3F77D04D1A56764CE724ABCA64F1E0D195
758E63EB598D1A4FFF98C697A72DFFA3F6C72> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
504.091 294.824 mo
(=g)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
504.091 294.824 mo
(=g) false chp
.51429 lw
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
12697 <001C60D8A8C9B5EE3103115A314A1EFBAFFD2E81F4D8DC7C99A842A29
0104F1727BB25E6B8E618C407FDD0CDF69E0D829DA4B5961808EF9EAF512A42B
013CB80477C53DE54B0F350C55DCE0DEBE9910C15F9B4A371B1E65D428270D77
18AE9E286CB8FAD76567C474627003B9D1524838C6E86E706519237762640D83
66333E9D9D8AA8BCE56CEF60A3F42DAE76D4F9306301E6ABB3C4E655F0B1B25F
254C354C359A73D1BFA93D56B0D17C74576EE4A26EADA1EF2AC29C5369EBCBFB
C782A4D6B7351F29586F80D6C1D4584B68243A9A006CEC3A79943625BC93BEC3
03DCC04E01FACD795633820583510A8F0E571CD0147E4D5DBA37FE1DB218E68D
08631D55F5519D32D8A1EF80259DBB52AE71CACBBFD83AD188FF663C49AA5DD8
448A01BA380077CCDCF552E1B0478A2C656A7CA5175E100D0837EEC1A03E50E0
1BE4CAF098E278D711CF3AE3D14495E3251653900B704D5C0B4BF709A7CAD240
39CC42700E1F7D6DC6BCC26DC2838A9DA95ACBF370790DFA2A0CA80F10BD895A
24E534F3E907639F1DFC6289B221A5ED40C0EE051AEAB172033906BDEDB97CB7
974DA4548A6CD14D5E4DA08CF58C07A4BDD690B7D2C86944729176EEAECCD180
1DD9DA0972CE303F28F5E9D00599BDCF5CCF76EE7126EB72081DC0E7FA089E4A
9D7EF> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
522.091 294.824 mo
(1\231)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
522.091 294.824 mo
(1\231) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
17455 <001C60D8A8C9B5EE3103B2879059F46DCC5206A3071AC546C89C517FB
5FCB2ABAB248E36D38A3C92BB08678D10FBAFD5B6A0EE80BB9625629DAA601DD
7A11B0680697B16C48649A25F87DD05CE80A59F3D93F686BA820296A0046CA9C
F1680BD51A14FC1736B49767C9CA2C10EF67267C8863AD6B63440F2AA669B785
30840FB44B84C1E904688221D3A67D33790BBA34AFDAE919A6AD1DB18600F22C
B1AA338912ED42D5DB683EF818034DEACB1192ED38F3F7C56786C4DBA4CC9614
E11F40C19ACC28FC19587D12639477EB87227B5DB85B89BAE2357612D1387092
748CC3DC1503EF2BCC99ADB074BA580AC26229F54EC1CDB615D2BFCABB50896E
6B7587B0ACB7E7CE6D0AD19AA2CCD086FB584B12C1FE18BA6D1E8618D5C43CDA
F5A561F6BD7D9AD9478C102A932E6E2DC16E0679E7EC022CB10D5671652EFFD4
12620BD9BAA6799A89DEB7B7466D04653E325E9FAE8F9BE3733E06B6D18CC9A8
53E89629EE523E01066DE4F7575CBF41EE1D9A94E64D8D1E668BEBF8FAD091F1
DA752A36B99C3F28F7BADEE2811BA7627D679CC> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
540.091 294.824 mo
(D/)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
540.091 294.824 mo
(D/) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
13262 <001C60D8A8C9B5EE31009667D7780CAD6DE760488A4DC72920A10D615
56BFF4F0EC8B9C3B3639D03C2496F9EBEEA879CD4A80830BC730B396720CE85D
03568DE3DC8FFE76FB6740C07438517F8D0EB5C602765C4F1DB0A5501B6A80E8
7DCA6A6A34C107051CF8345E7EC325A38A2A38F299D46E2DBF1A98456F5DA6E7
B898BAE19E78BDCB914E1B615F6B2552B4B2E47C738FBEF9E6130CC15CF143D8
0E316519985F45AD95F562C5BBBC533A880A4A85909384E8820B872CA01A7FE2
16494E234B74E0F69999EC86A62E87765F4C2C2DC2E8AAD7B94A5B2CF4CA6892
50A23583269CACAA370AAE5E3CFA4E8654F0F87DA4D79296DFC1401D7DC2251D
115893B780FAA2A2D9C8071050D4132E9F9F4939A482E605D1D6492F65C6E4A3
EC943574165A8AB7A34D2461264A380FA68A3F5F02721A7767FE4734CD847D14
2604FB9AF005E7660B6A71074715A46689BDD0C279CF68E0CB5EB998ABA5E655
4181EF15021C42606A6443EBC44BAB8235DD13B00A5F48A8C62FD817956343F7
33C408C003DDE07877E9B9064BC4CD68B906883F4407C4B0D8C7C3148BB48825
97C4021> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
558.091 294.824 mo
(3\316)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
558.091 294.824 mo
(3\316) false chp
@
350.831 374.394 mo
350.831 345.824 327.671 322.664 299.1 322.664 cv
270.531 322.664 247.371 345.824 247.371 374.394 cv
247.371 402.964 270.531 426.124 299.1 426.124 cv
327.671 426.124 350.831 402.964 350.831 374.394 cv
cp
.609125 .120363 .888151 0 cmyk
ef
.25 lw
350.831 374.394 mo
350.831 345.824 327.671 322.664 299.1 322.664 cv
270.531 322.664 247.371 345.824 247.371 374.394 cv
247.371 402.964 270.531 426.124 299.1 426.124 cv
327.671 426.124 350.831 402.964 350.831 374.394 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
.000732433 0 0 0 cmyk
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
11329 <001C60D8A8C9B5EE31038105EBB03E3888C7BE195D2CC19633EFFE161
0C64497B04B6127073818EC324A65A1DBF43268CA8C5B13929FF1992E6088049
EB75041B831D339CF02B31D82F5FF7D297AF6870FE4372B034B524C6190E2F09
022175210B7C9F5855C33B477F52E1241D57F42DAF3209BFE839FF28EAE66E3A
9FE538307ED84C876B80BEA3FAF0AA80206707D4071BD40FFDF8A8C0E025D5A7
4EF04108B56CB34FFC779F118F5659023379431929CAE03656DE48D1DF024C33
504FA82AD938C203630B621542A96250026FA7218DC77C94BE5A357B1C2FAE53
9B4FED37ED1A9942FE4CAA8D0AF409666188A1BB6669EA961B32463F8FD231DF
A56D82EE8202DA9A757B1B2EFA35A3021105E07F64D523CFEE74D6FD4FB85884
4AE3035D6EDA57BAA2D437CBA377368F2EADB627E9A259ACE33C87DE5D660AB8
40ADFFD372ADFFB7C009515FEF409AF48A73A4386517499CAB22D2AF47364CF3
62B08> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
263.111 379.884 mo
(,A)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
263.111 379.884 mo
(,A) false chp
.51429 lw
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
10368 <001C60D8A8C9B5EE3103849028E019886E4C2706913DFF512FC4CB453
FCF1391EA641DC5523D1160551A96D36BB298F0EC0C9282A67B0C4CFEC20697F
68ABAA53EFD73FC4AAD1F831C7A7447E1ECA11AEE2AA982C12383F1C404DC262
B886768AB26F82C682FD4EC9DE374A607EF054499FB872A019AAFD5FF0F2720B
80ADAB1CED168FDEAED21A17D6FFA388A56394F83F99B5FDE32DF9BF720F5B69
5AB9BF568C445ADB9952DCC86C5DE5E64A089F8141AF6D4FC8DC30AF3D7BB5C7
14D9FB7767E3335A617F0C4D9C0FE6FF3D84363763239CED90B76BC7445B0EA2
25A021F9CF3883724A9680EBB5239E9233A31C1BFC85A5A9E168FD0364841454
44DBAED2FAC6202895C68904AF4F39932DDEDA6EDEEA0735454FD61DBBC45641
3804A859AE0BE645D9256D5CFBE8A41FE01BB70ADA9ED28DD35EBF483726781D
6453C74DA14BFCBEB25179F84D06663797FB26CE475F6D6328390251B45FDB90
EDCBA9FC3EE47D6DFBA65D99568385535337C16BCA120C95F919CDB3138871E9
23C8FCA> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
281.111 379.884 mo
(\(\200)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
281.111 379.884 mo
(\(\200) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
12080 <001C60D8A8C9B5EE31034A54A2769875BBD560039DA362786A2922285
671815AA14F27C3209F60CDBB95BC4737E22526E17173D166F8A9BF8CB343478
F8099EC2F954604E8AE413E4863526D174AB9F949E7D57224E85B26797EE4DD2
2F8CE8CC23D43364C6594C2BAE71DD8973FB8AD6CE968D6057E72A12DC211442
8147923F8CC2260F35485B3DB587F318F467D7F7495190DFB78730FD6B894FB6
2A03A160A8511F152D3CBC7CC0582FCDC43333BCDDD50C22DC0B4E375BB0FBDA
DFA83CE3F2ECB6053C8C2BDDA9E069316053AA385594481C9220EA17B5915BF9
3E7548A8594B9A12A838549D73CAF4B6E98DB604367CE3C09B0FA9E9F0F2EF25
F67EB11AAE1446F00BEF41EF4AF89139B2E763F7CFFD0032F823A10F891D5FFE
C> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
299.111 379.884 mo
(/0)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
299.111 379.884 mo
(/0) false chp
@
%ADOBeginSubsetFont: NGLFJR+STFangsong-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJR+STFangsong-GBK-EUC-H 1 GetGlyphDirectory
17688 <001C60D8A8C9B5EE31030FE8B0E1F44D02334013FD06752C76ED4A618
6C48F3DB0644EB385EC2A98175376EF29C1F1B9421093A383799F935221AB324
6EFFC802772B19125D1CB9E27113E9B7A514486935C9B5D86DA6216DCA2D10E9
631CA4503DDF4C559B642185874C572A6906E3B7283F8D3D6F68F28F5915EA47
84E51B26DF9C1EC646DD37E270C9C11137D3CBDB04F6EC5AFECDFB54F7F6EF23
1459CB9CB1720DEF08594214A7EDAD7036CBFE77986C9E3E55C7A1E85A327CD5
E78D7B50F41B379855C81659874FD97AEA5720AAE9A482D36894CF81EADF5FB4
37732E67C843E3B12197F6E67D154AE30ABAD88DEADA63D0EFE9248CA827702E
F876348E7CCB956357BD7DAD6C114B318E6E4DC1725000AF2856B36E9B283A5C
26987289A9DA188AE94DD75DE1AD92AF9B14CA729E0C066FEB49640E6B78D978
09090755C> |
!
end
end end
%ADOEndSubsetFont
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
317.111 379.884 mo
(E\030)sh
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
317.111 379.884 mo
(E\030) false chp
@
3 lw
1 lc
1 lj
200.261 228.504 mo
200.391 268.914 201.54 324.704 211.32 350.984 cv
220.031 374.394 235.591 374.394 247.371 374.394 cv
.729854 .38587 1 .0102541 cmyk
@
194.741 229.884 mo
200.241 213.324 li
205.781 229.874 li
194.741 229.884 li
cp
ef
374.361 65.0743 mo
327.781 65.1743 261.861 66.1643 231.281 75.7643 cv
204.85 84.0643 204.85 98.8143 204.85 110.064 cv
@
372.98 59.5543 mo
389.54 65.0643 li
372.98 70.5943 li
372.98 59.5543 li
cp
ef
542.151 222.484 mo
542.021 180.834 540.841 123.114 530.531 95.9543 cv
521.361 71.7943 504.971 71.7943 492.57 71.7943 cv
@
547.671 221.094 mo
542.171 237.664 li
536.63 221.114 li
547.671 221.094 li
cp
ef
365.191 383.594 mo
413.171 383.504 481.461 382.584 513 373.444 cv
540.051 365.604 540.051 351.714 540.051 341.084 cv
@
366.57 389.114 mo
350.01 383.604 li
366.561 378.074 li
366.57 389.114 li
cp
ef
290.6 241.874 mo
455.01 241.874 li
470.661 241.874 483.351 229.184 483.351 213.524 cv
483.351 197.874 470.661 185.174 455.01 185.174 cv
290.6 185.174 li
274.941 185.174 262.251 197.874 262.251 213.524 cv
262.251 229.184 274.941 241.874 290.6 241.874 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
.75 lw
2 lc
0 lj
2 ml
290.6 241.874 mo
455.01 241.874 li
470.661 241.874 483.351 229.184 483.351 213.524 cv
483.351 197.874 470.661 185.174 455.01 185.174 cv
290.6 185.174 li
274.941 185.174 262.251 197.874 262.251 213.524 cv
262.251 229.184 274.941 241.874 290.6 241.874 cv
cp
.609125 .120363 .888151 0 cmyk
@
%ADOBeginSubsetFont: NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (NGLFJS+DengXian-Bold-GBK-EUC-H)
%%Title: (NGLFJS+DengXian-Bold-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /NGLFJS+DengXian-Bold-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-173 -235 1197 982} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29593 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 11 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
19988 <001C60D8A8C9B5EE3100D0169AC174A0A370EA16B7B9180C8585131E5
1AB51EB3D4CBC8DDEA31A3DC62E4F33F9FF15302778E5CE60CA1CE8B73566E69
697680908B684B0601E2ABD4F180AB3F3F45C4B37CDE7A7E6AADA8F1DC96688A
F2B55B5F16F3501E9AB4D6948BD4E3BD387AA1D978994DF50C803FE222806374
67A87DA252E06466D1B834721FEAF896745D2B85D160445A06E7FC19034A5863
DD1B94924439975A3BA248AE03FF41F1C00F9E46C70ED18D81E9C634EEBA31ED
A9C0B8B7456E5CB1C1BBADF7D69CF68FA833251768D151742FC96D99D398B78C
60DF242A39CC866C5B30CE1E0C229BC03C2630EA0B5A3E18D7A6570E33C848C9
BF1F170640B2D6E14664FA513B57795A73B1E0E0C924D6BE40DFB8EE3E0CA1EA
9FEB7AF986740902F28266AEBD64EC950AAA720E2623F445E00202A35C0AAAE2
F32A2CC7E3D1DF2C165173DDFC21C347ADF6D164D52F4B450BF5121DA455F87A
535D4D1BF816E4D9E88A7AAF00B766CD377D226FE84A02C843D614117729C973
3FA2831BE85D88674C5E3DD33260EB82B282CC68DD74C951F0032B9F48DE0B0B
030E804757646A51AF6021B461DA94A5B03B3C24B7CE37EFD8C733F98E500269
8112BB0166C41F47AB58DBB990F14EB8F1277D5F7B3EA9B573FA2A86565D7A53
23A38E4CC28868B9EB7AB8E388700C5E054B899932C1A65A071AF65B713F3FDC
EDF88D03245C4A9FEDC46C74E37680C21626AB6BAC182A37E742C2C64E3527DD
3DC3AD8BE9A758ED97FC9417BBB34F3C3C7D55463337B7F2DD942DDD28FACD8D
E3A1DE8CAF2DECA2E47C7D33AA5DA05A4622C0F60903426256647765F3D78BB5
15E506186> |
22756 <001C60D8A8C9B5EE31030C5D171D1E5317775B47C619BF704723F275B
F34E67241DAEFA10CEDF26D2F7A9CDF4661E0A9BB8FEB5FCEEC046D79FCE2955
2049B36D0F593A96750A2E6C726039E18BB8DF0EDD60B7804C673D9CDBEA0B4D
D429E6520380C377E5F532BD880A9688D2321EAB3041BD47A22F0522175E5084
F962AD266BD17E9D610F16150FE68B97A4EF9320F3AC8C1AFDE07B5CA803E949
C46843A49D30F76997FBE343B92DDB2CF1DD32DC57C2D38F91394EF21876AFBE
C7228F6708718411E80BF5EF2C48CFCAFD3F656E1EF6EAC5298D9825F75F0B0C
0FE4912243003CF2B7A32B075605E7441AE849A68A0930BD89B9894B1B7C3A3A
C67F42F6682E01828F1E05B0D019C03481D594AE6A697EF1D55CA0441CA3ED10
8993E83C621DBC9D502937C0F1A1EB8EA6BD31D631CF3289AC5FD22E533A397E
AE23AF68FCDA4BEC441A455E5F9546E957143D53BCDD666308C818AFC16CAAB5
B39898218D36CD30A4D71AF977FAD1A8864E17F3059749BC51667235E3DDE53E
F8A399064ECFD5331417C6B0FE7D136B02683EF68152908B9947A3434065D548
BF77DC7BA5C96DCA0466FC84A1FD9E966F4C56B762B6368BE6771E5E591AE298
76DD86F45F14793B078C3230E1E8FD7F01B6ECDCC5AA13E8CC5C479D52B47804
1397E77C392AADCEA3387AD4D6719C582ADA55B6CF93771ADD6DE3D608241A4A
901DC49B9ED1885D271076AE8A9BFD33457C84EC6EAD786A087D22AF24702438
3089744A3EE0A9C13A3CCD666E9EDEF0995A978A34F1E60B12AF697DC1EE4EC1
5C22ED69543D884BFCC337E01C03F3EB8B1786135FE7403C91CF518A09DB4CA4
E5F5CF4F68219AD629DE61E3487> |
8297 <001C60D8A8C9B5EE310DD678C8FD6C99CB2A8C732DEBDA85C8609FA177
7FFF10A02A72C7DA7750C39BFBFD373D3B6D71886D6693072929986D0208A28C
4FC92029E954A0E046DBC2743965EBBB221080D7167F3D2411F478D1236B4133
70A580D1544B3462B966EA4D35AE9F53F58F2F0C4B6EB611967D66FB70B690AB
ACAEB5DD84597AB9D6FEA46FA0D637324BEEF7D6A2C8A1CC4D4399592044CF48
5184B746940DD2E0522B3B052F554456C4EFDD53723BE8E36846B86DF423B18D
E250F83A47145D26C97FF34521EA85F02AE4E56F52FCE32128E5CA2E23F546A3
930CB0D11CB757DDCA5226D89E63AA872E640B17C26D2A117592E917ED027AFB
FDEB7438> |
17156 <001C60D8A8C9B5EE3102ACF9BF1F85E3D2B247CF20DD3498A714E0A3B
92070A6BFD1F6BFC0E60378624881B9E8F3A3465D764779CFDB2263ADEFBBBEB
D4CC88A8372ECAA3A868CAE7933E0CAB96C8DA2F39F04E7B2F020F3B32303BC3
AFE9F4CBD59C5606129032443298CF7366B4B4699F090EB09BE3F388E5D92044
ADC4E2FAE73B66C662D5BE9D32E4E3C6C850E6657DB1EA4C00BA595F9BD01BC8
B8BDD4994B1B66AE6C8C9716CA99ABD84A7A839303638C036A615464F018C36E
77D27A7A4212AD4AC6E694F4EEB2F0C6D5DE0A76524FCC27285FFCC5709157BA
E03FC153AF3412D6EDD548DA1E1FBE664C14FBD22C2DB9DE2DB54335C6B2486E
E62818E3F26B83676B127870B92E12948E41685C7D3BF953BC55489FD3622965
1FD01CFCFE292F3FB158C6A2D17FF39EC4F31C88296D177D858EE40D57756811
610546DDBCC361696C55C8EEBA66A1E937BD76077CA24AB87F9282341F87DE4A
3D48D37D134C3D39DA2989821EEFD371BF5039E02614D5B9D80A225253A67215
76AE7C89229AE5929A3E8A3050506595E871CF8042D04BC93518FA58784A8202
106> |
10066 <001C60D8A8C9B5EE3124F2176AAF51B6DBD352748DE5F60FF05C49400
96A1DCB5EC0BBE29B6F3F08B4F8366D7B2C2B0FE8A696AF9091D0D7DFD038219
CD541F21768B32B5CFDB89EFC0D1CC2693AFBC232136451DB62E4149F9062AB6
8C6B2E653ACED745F0C56BE561ED5F26A6C902DB21B76252CE6FFC55232289FC
55AA32E82355DCA342074633640051166330A037610E2BF1FAAC5F69B78841CB
A4603900E9D2A7A409E57018F34FA5F49B5809E5A99A2219E98B5642B3344DDF
D6E079836EC6DE361C6E0D68CA4367EAC0BD49CD17EA9411210B7D5179CE9E76
7D678B3BF5B437DCFC6F108A94E5D84760F80AC7779D00F520766D1FCE063059
FA9BE4CC2A3B8A88C984ED7C4BE1D0C32F92B4BD742563628954EFC8678E10D3
BE441B67D9EF42D9B3653388773EC23F5873062B21A8A83978BA8461BFF1CA93
9DE8CEF7A9777188370B87A9AE39940EE6C50636A0F22AD3951E5BCF20E3C3D9
18E68C55AF18099D3837A669A962933E8A8B421C087A82FD07E7CABB0F4A38A5
6D4031189196FF5BADDE2184085283978029A9D52CC49748C4596042AFB25BC0
AF693E43E80CE6847EC5D81A0D1774EFB20D07B4557DB9FB781CCE8BBB17461F
67EAB84969416039E1851B8BE62A7661B7152D002ED1AE803151A0E9CCAAD5B7
A16962E799DF5313DA18584997250D765F7F81FAE93023420C5FFEF5059D80B0
2FF55F5C1F9BE27CB7563FB56> |
13466 <001C60D8A8C9B5EE310D2F1EAAC12D88344D6AC6430EF133F292C7168
DB196C3B8BCC38B87BA222A701C4088F3474DFA210B735678B30789931C8EB42
47445F0547F53B0CF8984C6667ADDBC2DD070BE07DC40EE164EE8CD089B6D74A
8FE26A1198A9FF8C0F65579F031A1CD2683B57F8331D374126E775F2A23CC2C8
1480D8A0D5A72254CF1F84B6525D9F4E17FCBB1D73C9DE06E05F495F660CE9B0
31B9ACCC43ECEF8F45F931CC71841AD1AAA8D2DAD37A416A0DFE7FC2D1ECD331
21A51FC5AD064A50DB44FA684C9D19193CA50C79443CBF03E94F6D9867BAEEB1
DD2A612A5660F5B1D222FFDA44B2C5946F331DB6A53101C035FE82D3C4E8F515
EDE2C24EE107C439DA00BB37794B81D90A8CF8EFD46F275FABBB3941FCDEDDC3
BE5B51E18142A4D0EABF7B71E76981767662FDBF42E635F03B84E8D861BA5582
74BCE28C832BB033887AFE35470A42B6C53AFD0331E2B2E0C6224C53E459DC2A
611212AB5295E2E036277392EE017FCEB3E75D482672CB621890D863E6D0E593
B976986444DE4845974936B4E9B355D824D423B6F047199FC3218435D5931A5C
34DE72E07FE153B8561EFEA570CDA19DA849046> |
9860 <001C60D8A8C9B5EE3103E36CE4A65506E82198655C6C85963916666269
1D0344A0E5643FB957208B7F0ADB2F35F0CC84AF0B50D552EA68600E85553C4A
D6C5AC4D4B5A63906A7E14C0618FAC4966597C6ECF48E5C339CC8908441CCAE8
47FCF46666A54B089EAD748B92CB4312F0FDE36E8D6CDBD720FEF204FD423577
4D0CF32AA685B8D7A00105D2010456193CC66EB9C8F06AC20D7264450719C609
82B06C34CB049C0E3E9B885E48E4A38CED7CC75135C37744A592D34052C5634D
7D5FD3D99F306FC86DE3B73B5F54F1E142902AE03B6B95A7B7CE895737F4BC5F
E8ED329C7ADEA8D1768FA666AAADE43E72FF4E803CA24C1DBF29959A2D90CBB8
438FCDB33164EDA1E0ADD94EF31D867A940FFD49D8F147D0149BF12C150281DD
0D8DD39BBDDCF8DB5D8E19321CF7E391939B96B63CE8BB8DB632E132156320E7
F07D0D127B0FA3301CEE212F5936B9004B41C817> |
9791 <001C60D8A8C9B5EE3103ECA109DF3F23A30A9ABF66C9B0110D70A58FB7
7C2C532E2A79D75CBA5A08902577F42FF74738FDC5078B50CEEA7058834D04FE
57DE4D9E8E30E3C0A490FA3BCEA5A47CF506806F81A6983188A2014CECA158E4
4BAE9021FC65AD2F6153269C30E49F843055C72F366170D75655076D0E2FE016
949B5F5EE6614782163B504CDF9D2181213B57206EDB53A8EBC59393E7FAED5B
0243E81B212766DB21F0BF212D2EAEC7648F2FF1B91EA07C9C91BE578066FC61
694C92AB85671751D1F4931755A6364F454D92B2C5558309AF800633D154A203
495E3F3AE7EABFE8ED8941C1878F1C4AC5FBE578AA22B354C364645DA91A8D9B
1D1B53612AEE755D9362FD7DFF5041E43101123B0358738A045C6E6F83C32C68
E4E68CFD9B2E96EA751A23598F4F2EEBC740D6CA5D4D26DFE97C5E37274CD5A9
844762700260311B147B146AE11423F02A5AADC4605592BE9ED28782145EFCBB
41BB98D28502E79C5580E1785237AA164AD967ABB9EBAE6D5D7FE6EF75226A7C
71> |
8818 <001C60D8A8C9B5EE3103456356ED9965914256017A8BB1CDF8FF8F4535
FC794D7BC74EE9565FCCBF8633ECB3A3DF18E09C9ADCECB62905956FFE5E591C
37506AA5C3A39E1FCC8B66307D229E0807B8DBF7B6BA0CBBC7D674B58F1C29DA
64C10B32E299D9F33EFB82C195CB9D699A3D05D25F8981BDFF1D8CECC15B011C
887885885519826CD3AB79DD08D1B1FA1620BE227B34E5E71219F91F64B0BBDC
067C4366C4A444938A9A20428132B9D1B797FE8CE01EF129455499A26D0FFD06
1E0CB2AA8441963AC56D5ACC56E06D954B2197E27E4D866F125F4A2B4C21B9EB
9D7699D9C36DDAF3173BC921E59F299C0BA54050032B8D84A85D2656A60EE2AD
F86A909C80CDC8FAE58D81440DFB54A2D2BE56AB190BB689D2E40D140159A3D5
02B734249634F9D9666FD7E6607F9F5EA4B81E042C8FAEB220BD924187980CA1
74891671F0F78291FB3F65B6FEEC8044C7ADE311A178A3A7AFEAAD278C3B25B6
F1CC8EDCB9FB00A69AFA438A9C4E062EAAA122F3AE38B50C5B4964> |
13883 <001C60D8A8C9B5EE3102236D9DA42F52D76F78D57FC65CD2919F786C3
762EB2CD9F48EB68DCA976B7A1F80BB0D58C2F2C9D1B3BCD154127A009044875
19DEE6B59A49621271AEEF2F6E4C02177FC2FC791833F4920BE100B51749A8A3
9EA2827E2D159032203CFDEB5DF730024F1A624D0830628EB88F30AC378F7450
149664B13BBBE0D23717568024870808F700F07A3C0C30442A584B815799C936
AE5CF53BD14DA51B4A3C9AC5AE34619382084DD9E22E7D0B1CE848BB267EF562
8D6FFE58FD26484D3737471268600F78E2B077F70BB43E5A556A99886561E17F
2EAB0A8E38BD3502AE8F06E7061BE5BF70F8523F2FF003D7DD89B2FDFFA33E9A
3625A567106B06E5CC369DB5508EEF8CE502197A56CA058D076BADCCB968BF3B
AC5913E6AE41D5ADEC5C66B20499FA99DA5873DB64B63D48EC03F25F010EC86F
0E35768B2235CD86D7376BB0F56D010D6C532D1AB23C0B8527BFE9909> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H /Identity-H 0 [/NGLFJS+DengXian-Bold-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
282.861 218.984 mo
(N\024X\344 iC\004'R4\232&\204&?"r6;)sh
15.6365 379.354 mo
119.096 379.354 li
119.096 322.661 li
15.6365 322.661 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
3 lw
15.6365 379.354 mo
119.096 379.354 li
119.096 322.661 li
15.6365 322.661 li
cp
.800717 .471687 .0555123 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJS+DengXian-Bold-GBK-EUC-H 5 GetGlyphDirectory
8914 <001C60D8A8C9B5EE315144CD69C9EB0DC994211C1C5F109A2A4AB95796
D59EA8DD6B5041F677EC544F546DB047C38C589A28125CA6B59655B504572AE8
6C2CD4ED05DCAC8C935D45BAA04E8E61CBE136EA33941559CA15EADEC999E1F4
08CCE6E98DA0A378A18A2A708921F41CA0CEAA3F3A186D1EA344E7A6DD0CCBB7
A1BCD9A9F760828B014F1A0C0D9CFE37E8FF08AB068AFD8FE3E96680C2D4E106
42FDE18F59149C5440E1FC07215AFCAE724FD3B662C166F2C7F3A97E00B3545A
994CD6742C28BD50D92533E201A259E7F3930272501D4CB3F7A652BE789B0FBF
F6423ACBB1AD039C0CD33B9D7F39A7BE3DCD8B911B8347686695F7F848D474A7
BAB720B3206697F172A8DBBBF9B3818F1666C4F9FFA9C96F4808802A4E077187
DFA17E7706322B918C2C48E8DE71FBD96C318E9E> |
11094 <001C60D8A8C9B5EE3103000014B90DECDD5BEB82C711F4E29537BD79B
BC79E6B8BB4C6F92DE4926660B5CD8D8865DCE12675D15DF37E1CC59CB5B23AD
645512D49D0AAC776B8D60AEED646F6B9317F8971870DF5D946C811053437879
32085DA97E8C55136E865F733B79BA9DFF7594B60DB0CB60841AB1429FAF2D4E
B847CE9FFEEF47B1B73E617D19587DC27593D8D3E0D63132BD68647A45BCD5D8
ECA854DC349BC73674C63BF5620A91B484B8B66CDEA4398D0B0680447F9719EE
B4A49304E08196381830759401FE95B40C8072B71D8EE49C64844555FAB4B3E9
10FCC90AC9B4325A9B7287CA4B2C52C9CD0803E92D410926B785F2D2F947A232
9571A226425B26ACE9C4E0FA7AB9CB2290623DC137DA197E8CD73E3FDCF5FF41
0E6C40DE500CE941848064B006E365C2831B4D025879EED3D93E5753D0625139
0815BA70225BA18526E49EA253488BA360857C513C95FAC97E57511F5D9702F4
CDA276F011B8CC7041C11B12494E291ADCA986E57193C63C1298A03739308C96
F45D48457961396DAE0058FBA32311977779CE056E6F8D1D6FBBE9C42092F08> |
7470 <001C60D8A8C9B5EE3102F9DC3C390903D7F094A140F32E024759EF7322
7B42CAD84C4A83FC83B7B7DFB8674CDB71F5D1971E43ECB8C6A1363A39DD7DB3
852888396C2910724D481C461926748A1F7877875F02A06E18ADD2DCFC8D1B70
0E0A1911B36C8688CD820F4FCBE938F4827D38CB543763C31DB674C2C8A69F12
981B6AA853B71170367818198CC8327F0AE26DC95EB579C362D5E31575A85296
DD98662423C054111E29E57B98A372941882873E1499164FE4009D129BF9BDBA
837D1C5D67402D> |
9726 <001C60D8A8C9B5EE310D6B1E1F01DADB04AC7D4E4D852A38BA528DC8BF
FDDD1C9428AD80DF17C2F30EC63D5FE88116243B677693FB888437D7C206955F
6EC2D7CF9A36542083D19B417ABFC5C46E97FBD63F3F6BE4AFF4D240CEC0AA1E
B44AB65D5E5A8CFACB6089CEA4CE32059165B63FB00EFB0C0CCC1B69ED7C7185
23B43052AF27DE0D5CAF205447EFBF56A964230F7C8FE3E32D6F8CC9939F6CD3
1A1332A8324ACDBFAEDE270AF91E175522D82B6699A70064C0CE6CF69AB3BD00
A3E94BF232E1002873A9931A1050EA06235D470271BA978D2E3A230F838690F9
D92879C6A2423D6A8DA8C81892712CB2381D98DA3336D7046E4074617FE2FEC6
34759B6F> |
10935 <001C60D8A8C9B5EE3102AA94812CF6241F4D053ACF3EEE1BFA34B1015
C0D2D97793753E85CA46E999E220FFE211189DCAE12334A0EC976064519B0648
A803D9FB5E7F6679B6BCB035B15B0E983FA16E48F349B1C5523098C18B10CC59
1641EB6DC537A93B2153A994B6408F9B2A120670537CCC7D644DDF4D53E5F68E
7B87A9EDC048430AFF34E54BB8F87D7ACC990F04758621F0530C55BAF142939B
49998429E8EA4B508F76D3B1F99736EB0830447CD99D651DFBC908D25BD2C7A2
1B914AC21E909D4D7F020CEBF98939D2EBD59F36FC22602DE62AE585254B89A6
E253434F9D96E8AB3BC7887DE82D46BEE34E73AB3C0A3A42227FDDFE2C5C5CDD
51FB4A094C4DC87648390B4482EDE4D556D868E1324B6C01558EC78220C3FD4F
20B37EA6FB9E1DDC6212CB553593C2E498EBE0619C803871F17828050DF93C26
7FABB972B46FE222F009490591719116294A3B29F8085555E2FEC9226449245D
23396A9B4E8AD5EA696E28EAD504BABBC3020E8513C6AF01B14A6AF3D329A78B
3024008E17A051A9BF6C5D9EA9199F62A8FBA80460F00E41FDAC4A30E2F1C612
466727D1787BFF719D7D09BE7433CDC6D467BA17E035908D619F7B3546880F92
DAF015F> |
!
end
end end
%ADOEndSubsetFont
/NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
22.3865 356.504 mo
("\322+V\035.%\376*\267)sh
1 lc
1 lj
143.901 186.104 mo
123.391 186.874 100.061 190.634 86.4505 208.884 cv
67.3705 234.454 67.3705 288.474 67.3705 322.664 cv
.800717 .471687 .0555123 0 cmyk
@
142.451 180.604 mo
159.081 185.904 li
142.591 191.644 li
142.451 180.604 li
cp
ef
612.201 202.574 mo
715.661 202.574 li
715.661 145.881 li
612.201 145.881 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2 lc
0 lj
612.201 202.574 mo
715.661 202.574 li
715.661 145.881 li
612.201 145.881 li
cp
.800717 .471687 .0555123 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJS+DengXian-Bold-GBK-EUC-H 1 GetGlyphDirectory
24255 <001C60D8A8C9B5EE31023A879E5555B396D1C7753A4293216AB6697CA
BF87D8C2812A997CD308E023E209230506FC97E06FE0059C0243706839323A49
51DFEF46AA9D2426970BFAF9261E101AEEC8B8C4C91E53CE8DFFE6B0F201CD37
69B456B23926F6EE81B61282FD54810018996DF50290A4D46AE937202716B3C8
5B6D381C4427C66EF1C04EF06A1EA4A85D06E86B497BE8EBFB6681FB426A17A2
A3FDACC0EC3C966FE15EA48B9892A4E086FAF1D413BCE7F593920E2F78B51E3C
B8840AE1D5B68AE25A781EC2778843A95528A3D30F5CC1303075122262FC59EF
42A779505D04CF5CBE2660BE816503E521064210945EC8DC7B9D7704E1A95FFB
0A7EC515290287C3C4B9B238183539978014940D785A98F7886F10C0F32A743F
FAD7A29D002CBCBED835438CDC2B8B650B01FEDE6EE68885775C295E327921C9
E5EEEF552D7856636A2E0823F6A1FB92286E7BFA914F9F9585E17> |
!
end
end end
%ADOEndSubsetFont
/NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
628.051 179.674 mo
("\322^\277%\376*\267)sh
1 lc
1 lj
600.451 292.304 mo
635.981 285.934 653.021 270.184 660.531 253.034 cv
667.701 236.654 666.19 218.994 666.19 203.604 cv
.800717 .471687 .0555123 0 cmyk
@
602.551 297.584 mo
585.401 294.314 li
601.081 286.644 li
602.551 297.584 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (NGLFJT+SimHei-GBK-EUC-H)
%%Title: (NGLFJT+SimHei-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /NGLFJT+SimHei-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-12 -156 996 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28562 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300013909A50A2AB7EE3C36B6EFE4BFA05B0B1D6F8
CE08BF0CAB16ED4> |
5322 <001C60D8A8C9B5EE31028A5D225C80DF1F515C20A06C40C70176224FB6
306BB82FDABF2909260E9E3A34180B055794697830BC7A7C5F1D919FC91E9DB0
D8A258B30931D7728F388E648EA7AEA2F28CC71E46938199B8E7086D7A189A4E
2EB27ED959F2021C63A6C7C20F63BFCFA08D2A687DA8EE9B0C31F0A96D887A9A
15FDC7BF56596DDFEF869D614B120A9FF4898BD0090900F4669D82D21AB7E471
351E2F30A3BC7E02AF7AE3B3F4B64BB7E2EAA10B51FF2BB91450440341EC4627
ACCF65F8DA4128E8D5AEFFB8350B31EB794A29652324BB78077433CE06858889
0F4BFE9302A88C2D512EB37F22F700FFC5CE9723DF31C5136EE5BB145C68C527
6CD21BC2789CE5C9C51C> |
11102 <001C60D8A8C9B5EE3138E09A6900502004387FDAE6C39794D1C73BFB4
26A7B0327E17A38CC54BA24BB0C88844A311177CC344A45220449E3C56520F2D
C38E3AE661649F30FA23CD1AB8342A72D808FC8D7CEA1A726FA728ADB04083D8
D860D5073719DEC1ED3556A08B7BA1A43455996BB97EAEB56673D17289C03D73
28AD6EF87DB894278A04BA0EB5FB26419D47DFAE50CC24AA509AE741E91B6092
582B1CA39F41790FB3037FD3CBCC2725056FE43073709007334BD11B795713C7
C19712DF23A8A7AF377CC37> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /NGLFJT+SimHei-GBK-EUC-H-Identity-H /Identity-H 0 [/NGLFJT+SimHei-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
28.4105 40.1643 mo
(\024\312+^)
[15.96 0 ]xsh
%ADOBeginSubsetFont: WAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /WAAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f329dc15b2b000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c796646df54e60000e9a400001da268656164fefcadd5000014140000
0036686865610dad0c0c0000144c00000024686d74787b260d9600001470
0000489a6c6f6361e84ce1ed00005d0c000037066d6178702e6325bf0000
9414000000206e616d65150e8e75000094340000307470726570a5fb69be
0000c4a8000024f9676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e4002effc200247b00000009000000004d53202000400000
1d420600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d00000100000006428f40680ff95f0f3cf500190800
00000000bbeb7ccc00000000ddf8a3c6fbfafd8009ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008cb040e000000000000000000000000000004a1
002300000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000045800ac00000000000000000000000003ad
004700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000071e003d
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000046500a100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000060600a10000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003c5
00a1000000000000000003ed00a1000000000000000000000000034f0049
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000063e00370000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002e50048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001f6
006c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002f5001c00000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046d008e000000000000000002d8008e00000000029b00570280
004600000000000000000000000004450022000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000002f5001c00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000046d008e0000000000000000000000000000000002d8008e029b0057
000000000000000004450022000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00>
<000000bf00bf00bf00bf016c016c016c016c016c016c016c016c016c016c
016c016c016c016c016c016c016c016c016c016c016c016c016c016c016c
016c016c016c016c016c016c016c016c016c016c016c016c016c016c016c
016c016c016c016c016c016c016c016c016c016c016c016c016c016c016c
016c016c016c016c016c016c016c016c016c022e022e022e022e022e022e
022e022e022e022e022e022e022e022e022e022e022e022e022e02ba02ba
02ba037b037b037b037b046e046e046e046e046e046e046e046e046e046e
046e046e046e046e046e046e046e046e046e046e046e046e051005100510
051005100510051005100510051005100510051005100510058905890589
058905890589058905890589058905890589058905890589058905890589
0589058905d905d905d905d905d905d905d905d905d905d905d905d905d9
05d905d905d905d905d905d905d905d905d905d905d905d905d905d905d9
05d905d905d905d905d905d905d905d905d905d905d905d905d905d905d9
05d906610661066106610661066106610661066106610661066106610661
0661066106610661066106c906c906c9075607560756075607f907f907f9
07f907f907f907f907f907f907f907f907f907f907f907f907f907f907f9
07f907f907f907f908900890089008900890089008900890089008900890
089008900890089008900890089008900890089008900890089008900890
0890089008900890089008900890089008900890089008900890093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f093f093f093f093f093f093f093f093f
093f093f093f093f093f093f093f09c909c909c909c909c909c909c909c9
09c909c909c909c909c909c909c909c909c909c909c909c909c909c909c9
09c909c909c909c909c909c909c909c909c909c909c909c909c909c909c9
09c909c909c909c909c909c909c909c909c909c909c909c909c909c909c9
09c909c909c909c909c909c909c909c909c909c909c909c909c909c909c9
09c909c909c909c909c909c90a430a430a430a430a430a430a430a430a43
0a430a430a430a430a430aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa60aa6
0aa60aa60aa60af70af70af70af70af70af70af70b510b510b510b510b51
0b510b510b510b510b510b510b510b510b510b510b510b510b510b510b51
0b510b510b510b510b510b510b510b510b510b510b510b510b510b510b51
0b510b510b510b510b510b510b510b510b510b510b510b510b510b510b51
0b510b510b510b510b510b510b510b510b510b510b510b510b510b510b51
0b510b510b510b510b510ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba30ba3
0ba30ba30bab0bab0bab0bab0bab0bab0bab0bab0bab0bab0bab0bab0bb3
0bb30bb30bbb0bbb0bc30c590c590c590c590c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610c610c610c610c610c610c610c61
0c610c610c610c610c610c610c610c610cc00cc00cc00cc00cc00cc00cc0
0cc00cc00cc00cc00cc00cc00d450d450d450d450d450dab0e500e500e50
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed10ed1
0ed10ed10ed10ed10ed10ed10ed10ed10000000100001b82004f00050045
000200020010002f00870000124124f9000100010000002d022200000003
00000000021000000000000300000001000e02100000000300000002000e
04b00000000300000003002404be0000000300000004000e021000000003
00000005001804e20000000300000006000e021000000003000000070076
04fa0000000300000008002a057e00000003000000090020078200000003
0000000a02a00210000000030000000b005607a2000000030000000c002a
07f8000000030000000d0e060822000000030000000e004a07a200010000
000000000109162800010000000000010007173100010000000000020007
188100010000000000030018188800010000000000040007173100010000
00000005000c18a00001000000000006000717310001000000000007003b
18ac00010000000000080015162f0001000000000009001018e700010000
0000000a01501731000100000000000b002b18f7000100000000000c0015
1922000100000000000d07031937000100000000000e002518f700030001
04090000021205700003000104090001000e02100003000104090002000e
04b00003000104090003002404be0003000104090004000e021000030001
04090005001804e20003000104090006000e021000030001040900070076
04fa0003000104090008002a057e00030001040900090020078200030001
0409000a02a00210000300010409000b005607a2000300010409000c002a
07f8000300010409000d0e18203a000300010409000e004a07a200a90020
00320030003200310020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
00650064002e000d0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e00430061006c00690062007200690020
00690073002000610020006d006f006400650072006e002000730061006e
0073002000730065007200690066002000660061006d0069006c00790020
007700690074006800200073007500620074006c006500200072006f0075
006e00640069006e006700730020006f006e0020007300740065006d0073
00200061006e006400200063006f0072006e006500720073002e00200049
00740020006600650061007400750072006500730020007200650061006c
0020006900740061006c006900630073002c00200073006d0061006c006c
00200063006100700073002c00200061006e00640020006d0075006c0074
00690070006c00650020006e0075006d006500720061006c002000730065
00740073002e0020004900740073002000700072006f0070006f00720074
0069006f006e007300200061006c006c006f007700200068006900670068
00200069006d007000610063007400200069006e00200074006900670068
0074006c007900200073006500740020006c0069006e006500730020006f
0066002000620069006700200061006e006400200073006d0061006c006c
0020007400650078007400200061006c0069006b0065002e002000430061
006c0069006200720069002700730020006d0061006e0079002000630075
007200760065007300200061006e006400200074006800650020006e0065
007700200072006100730074006500720069007300650072002000740065
0061006d00200075007000200069006e0020006200690067006700650072
002000730069007a0065007300200074006f002000720065007600650061
006c002000610020007700610072006d00200061006e006400200073006f
006600740020006300680061007200610063007400650072002e00520065
00670075006c00610072004d006900630072006f0073006f00660074003a
002000430061006c006900620072006900560065007200730069006f006e
00200036002e0032003600430061006c0069006200720069002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00670072006f007500700020006f006600200063006f006d00700061006e
006900650073002e00a9002000320030003200310020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e000d000a0048006500620072
006500770020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200063006f007000790072
0069006700680074002000a9002000320030003000330020002600200032
003000300037002c002000520061006c00700068002000480061006e0063
006f0063006b002000260020004a006f0068006e00200048007500640073
006f006e002e002000540068006900730020006c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020006900730020
006f00700065006e00200073006f007500720063006500200073006f0066
0074007700610072006500200075006e0064006500720020007400680065
0020004d004900540020004c006900630065006e00730065003b00200073
0065006500200065006d0062006500640064006500640020006c00690063
0065006e007300650020006400650073006300720069007000740069006f
006e00200066006f0072002000640065007400610069006c0073002e004c
007500630028006100730029002000640065002000470072006f006f0074
00680074007400700073003a002f002f0064006f00630073002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f00610062006f0075007400680074
00740070003a002f002f006c00750063006100730066006f006e00740073
002e0063006f006d004d006900630072006f0073006f0066007400200073
007500700070006c00690065006400200066006f006e0074002e00200059
006f00750020006d00610079002000750073006500200074006800690073
00200066006f006e007400200074006f0020006300720065006100740065
002c00200064006900730070006c00610079002c00200061006e00640020
007000720069006e007400200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
0074006800650020006c006900630065006e007300650020007400650072
006d00730020006f00720020007400650072006d00730020006f00660020
007500730065002c0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000700072006f0064007500630074002c
00200073006500720076006900630065002c0020006f007200200063006f
006e00740065006e007400200069006e0020007700680069006300680020
007400680069007300200066006f006e0074002000770061007300200069
006e0063006c0075006400650064002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e00200041006e00790020006f00740068
006500720020007500730065002000690073002000700072006f00680069
00620069007400650064002e000d000d00540068006500200066006f006c
006c006f00770069006e00670020006c006900630065006e00730065002c
0020006200610073006500640020006f006e00200074006800650020004d
004900540020006c006900630065006e0073006500200028006800740074
0070003a002f002f0065006e002e00770069006b00690070006500640069
0061002e006f00720067002f00770069006b0069002f004d00490054005f
004c006900630065006e007300650029002c0020006100700070006c0069
0065007300200074006f00200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020201c004c00610079006f007500740020
004c006f006700690063201d0020006100730020006a006f0069006e0074
006c007900200064006500760065006c006f007000650064002000620079
002000520061006c00700068002000480061006e0063006f0063006b0020
0061006e00640020004a006f0068006e00200048007500640073006f006e
002e0020000d000d005000650072006d0069007300730069006f006e0020
0069007300200068006500720065006200790020006700720061006e0074
00650064002c002000660072006500650020006f00660020006300680061
007200670065002c00200074006f00200061006e00790020007000650072
0073006f006e0020006f0062007400610069006e0069006e006700200061
00200063006f007000790020006f006600200074006800650020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c002000480065006200720065007700200061006e006400200061
00730073006f00630069006100740065006400200064006f00630075006d
0065006e0074006100740069006f006e002000660069006c006500730020
00280074006800650020201c004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065201d0029002c
00200074006f0020006400650061006c00200069006e0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f00660074007700610072006500200077006900740068006f00750074
0020007200650073007400720069006300740069006f006e002c00200069
006e0063006c007500640069006e006700200077006900740068006f0075
00740020006c0069006d00690074006100740069006f006e002000740068
0065002000720069006700680074007300200074006f0020007500730065
002c00200063006f00700079002c0020006d006f0064006900660079002c
0020006d0065007200670065002c0020007000750062006c006900730068
002c00200064006900730074007200690062007500740065002c00200073
00750062006c006900630065006e00730065002c00200061006e0064002f
006f0072002000730065006c006c00200063006f00700069006500730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002c0020
0061006e006400200074006f0020007000650072006d0069007400200070
006500720073006f006e007300200074006f002000770068006f006d0020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f00660074007700610072006500200069007300200066
00750072006e0069007300680065006400200074006f00200064006f0020
0073006f002c0020007300750062006a00650063007400200074006f0020
00740068006500200066006f006c006c006f00770069006e006700200063
006f006e0064006900740069006f006e0073003a000d000d005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000d00540048004500200053004f004600540057004100520045
002000490053002000500052004f00560049004400450044002000270041
00530020004900530027002c00200057004900540048004f005500540020
00570041005200520041004e005400590020004f004600200041004e0059
0020004b0049004e0044002c002000450058005000520045005300530020
004f005200200049004d0050004c004900450044002c00200049004e0043
004c005500440049004e004700200042005500540020004e004f00540020
004c0049004d004900540045004400200054004f00200054004800450020
00570041005200520041004e00540049004500530020004f00460020004d
00450052004300480041004e0054004100420049004c004900540059002c
0020004600490054004e00450053005300200046004f0052002000410020
0050004100520054004900430055004c0041005200200050005500520050
004f0053004500200041004e00440020004e004f004e0049004e00460052
0049004e00470045004d0045004e0054002e00200049004e0020004e004f
0020004500560045004e00540020005300480041004c004c002000540048
004500200041005500540048004f005200530020004f005200200043004f
005000590052004900470048005400200048004f004c0044004500520053
0020004200450020004c004900410042004c004500200046004f00520020
0041004e005900200043004c00410049004d002c002000440041004d0041
0047004500530020004f00520020004f00540048004500520020004c0049
004100420049004c004900540059002c0020005700480045005400480045
005200200049004e00200041004e00200041004300540049004f004e0020
004f004600200043004f004e00540052004100430054002c00200054004f
005200540020004f00520020004f00540048004500520057004900530045
002c002000410052004900530049004e0047002000460052004f004d002c
0020004f005500540020004f00460020004f005200200049004e00200043
004f004e004e0045004300540049004f004e002000570049005400480020
00540048004500200053004f0046005400570041005200450020004f0052
002000540048004500200055005300450020004f00520020004f00540048
004500520020004400450041004c0049004e0047005300200049004e0020
00540048004500200053004f004600540057004100520045002e000da920
32303231204d6963726f736f667420436f72706f726174696f6e2e20416c
6c205269676874732052657365727665642e0d486562726577204f70656e
54797065204c61796f7574206c6f67696320636f7079726967687420a920
32303033202620323030372c2052616c70682048616e636f636b2026204a
6f686e20487564736f6e2e2054686973206c61796f7574206c6f67696320
666f72204269626c6963616c20486562726577206973206f70656e20736f
7572636520736f66747761726520756e64657220746865204d4954204c69
63656e73653b2073656520656d626564646564206c6963656e7365206465
736372697074696f6e20666f722064657461696c732e0d43616c69627269
2069732061206d6f6465726e2073616e732073657269662066616d696c79
207769746820737562746c6520726f756e64696e6773206f6e207374656d
7320616e6420636f726e6572732e20497420666561747572657320726561
6c206974616c6963732c20736d616c6c20636170732c20616e64206d756c
7469706c65206e756d6572616c20736574732e204974732070726f706f72
74696f6e7320616c6c6f77206869676820696d7061637420696e20746967
68746c7920736574206c696e6573206f662062696720616e6420736d616c
6c207465787420616c696b652e2043616c696272692773206d616e792063
757276657320616e6420746865206e657720726173746572697365722074
65616d20757020696e206269676765722073697a657320746f2072657665
616c2061207761726d20616e6420736f6674206368617261637465722e52
6567756c61724d6963726f736f66743a2043616c696272693a2032303035
56657273696f6e20362e323643616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e4c7563286173292064652047726f6f74687474
70733a2f2f646f63732e6d6963726f736f66742e636f6d2f7479706f6772
617068792f61626f7574687474703a2f2f6c75636173666f6e74732e636f
6d4d6963726f736f667420737570706c69656420666f6e742e20596f7520
6d617920757365207468697320666f6e7420746f206372656174652c2064
6973706c61792c20616e64207072696e7420636f6e74656e742061732070
65726d697474656420627920746865206c6963656e7365207465726d7320
6f72207465726d73206f66207573652c206f6620746865204d6963726f73
6f66742070726f647563742c20736572766963652c206f7220636f6e7465
6e7420696e207768696368207468697320666f6e742077617320696e636c
756465642e20596f75206d6179206f6e6c792028692920656d6265642074
68697320666f6e7420696e20636f6e74656e74206173207065726d697474
65642062792074686520656d62656464696e67207265737472696374696f
6e7320696e636c7564656420696e207468697320666f6e743b20616e6420
286969292074656d706f726172696c7920646f776e6c6f61642074686973
20666f6e7420746f2061207072696e746572206f72206f74686572206f75
747075742064657669636520746f2068656c70207072696e7420636f6e74
656e742e20416e79206f74686572207573652069732070726f6869626974
65642e0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261
736564206f6e20746865204d4954206c6963656e73652028687474703a2f
2f656e2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963
656e7365292c206170706c69657320746f20746865204f70656e54797065
204c61796f7574206c6f67696320666f72204269626c6963616c20486562
72657720d24c61796f7574204c6f676963d3206173206a6f696e746c7920
646576656c6f7065642062792052616c70682048616e636f636b20616e64
204a6f686e20487564736f6e2e200d0d5065726d697373696f6e20697320
686572656279206772616e7465642c2066726565206f6620636861726765
2c20746f20616e7920706572736f6e206f627461696e696e67206120636f
7079206f6620746865204f70656e54797065204c61796f7574206c6f6769
6320666f72204269626c6963616c2048656272657720616e64206173736f
63696174656420646f63756d656e746174696f6e2066696c657320287468
6520d24c61796f7574204c6f67696320536f667477617265d3292c20746f
206465616c20696e20746865204c61796f7574204c6f67696320536f6674
7761726520776974686f7574207265737472696374696f6e2c20696e636c
7564696e6720776974686f7574206c696d69746174696f6e207468652072
696768747320746f207573652c20636f70792c206d6f646966792c206d65
7267652c207075626c6973682c20646973747269627574652c207375626c
6963656e73652c20616e642f6f722073656c6c20636f70696573206f6620
746865204c61796f7574204c6f67696320536f6674776172652c20616e64
20746f207065726d697420706572736f6e7320746f2077686f6d20746865
204c61796f7574204c6f67696320536f667477617265206973206675726e
697368656420746f20646f20736f2c207375626a65637420746f20746865
20666f6c6c6f77696e6720636f6e646974696f6e733a0d0d546865206162
6f766520636f70797269676874206e6f7469636520616e64207468697320
7065726d697373696f6e206e6f74696365207368616c6c20626520696e63
6c7564656420696e20616c6c20636f70696573206f72207375627374616e
7469616c20706f7274696f6e73206f6620746865204c61796f7574204c6f
67696320536f6674776172652e0d0d54484520534f465457415245204953
2050524f564944454420274153204953272c20574954484f555420574152
52414e5459204f4620414e59204b494e442c2045585052455353204f5220
494d504c4945442c20494e434c5544494e4720425554204e4f54204c494d
4954454420544f205448452057415252414e54494553204f46204d455243
48414e544142494c4954592c204649544e45535320464f52204120504152
544943554c415220505552504f534520414e44204e4f4e494e4652494e47
454d454e542e20494e204e4f204556454e54205348414c4c205448452041
5554484f5253204f5220434f5059524947485420484f4c44455253204245
204c4941424c4520464f5220414e5920434c41494d2c2044414d41474553
204f52204f54484552204c494142494c4954592c20574845544845522049
4e20414e20414354494f4e204f4620434f4e54524143542c20544f525420
4f52204f54484552574953452c2041524953494e472046524f4d2c204f55
54204f46204f5220494e20434f4e4e454354494f4e205749544820544845
20534f465457415245204f522054484520555345204f52204f5448455220
4445414c494e475320494e2054484520534f4654574152452e0d004d0069
00630072006f0073006f0066007400200073007500700070006c00690065
006400200066006f006e0074002e00200059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
0074006f0020006300720065006100740065002c00200064006900730070
006c00610079002c00200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d00730020006f00720020
007400650072006d00730020006f00660020007500730065002c0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000700072006f0064007500630074002c002000730065007200760069
00630065002c0020006f007200200063006f006e00740065006e00740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e0074002000770061007300200069006e0063006c007500640065
0064002e00200059006f00750020006d006100790020006f006e006c0079
002000280069002900200065006d00620065006400200074006800690073
00200066006f006e007400200069006e00200063006f006e00740065006e
00740020006100730020007000650072006d006900740074006500640020
00620079002000740068006500200065006d00620065006400640069006e
00670020007200650073007400720069006300740069006f006e00730020
0069006e0063006c007500640065006400200069006e0020007400680069
007300200066006f006e0074003b00200061006e00640020002800690069
0029002000740065006d0070006f0072006100720069006c007900200064
006f0077006e006c006f006100640020007400680069007300200066006f
006e007400200074006f002000610020007000720069006e007400650072
0020006f00720020006f00740068006500720020006f0075007400700075
0074002000640065007600690063006500200074006f002000680065006c
00700020007000720069006e007400200063006f006e00740065006e0074
002e00200041006e00790020006f00740068006500720020007500730065
002000690073002000700072006f0068006900620069007400650064002e
000d000a000d000a00540068006500200066006f006c006c006f00770069
006e00670020006c006900630065006e00730065002c0020006200610073
006500640020006f006e00200074006800650020004d004900540020006c
006900630065006e00730065002000280068007400740070003a002f002f
0065006e002e00770069006b006900700065006400690061002e006f0072
0067002f00770069006b0069002f004d00490054005f004c006900630065
006e007300650029002c0020006100700070006c00690065007300200074
006f00200074006800650020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020201c004c00610079006f007500740020004c006f00670069
0063201d0020006100730020006a006f0069006e0074006c007900200064
006500760065006c006f007000650064002000620079002000520061006c
00700068002000480061006e0063006f0063006b00200061006e00640020
004a006f0068006e00200048007500640073006f006e002e0020000d000a
000d000a005000650072006d0069007300730069006f006e002000690073
00200068006500720065006200790020006700720061006e007400650064
002c002000660072006500650020006f0066002000630068006100720067
0065002c00200074006f00200061006e007900200070006500720073006f
006e0020006f0062007400610069006e0069006e00670020006100200063
006f007000790020006f006600200074006800650020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
002000480065006200720065007700200061006e00640020006100730073
006f00630069006100740065006400200064006f00630075006d0065006e
0074006100740069006f006e002000660069006c00650073002000280074
006800650020201c004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065201d0029002c00200074
006f0020006400650061006c00200069006e00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
0074007700610072006500200077006900740068006f0075007400200072
00650073007400720069006300740069006f006e002c00200069006e0063
006c007500640069006e006700200077006900740068006f007500740020
006c0069006d00690074006100740069006f006e00200074006800650020
00720069006700680074007300200074006f0020007500730065002c0020
0063006f00700079002c0020006d006f0064006900660079002c0020006d
0065007200670065002c0020007000750062006c006900730068002c0020
0064006900730074007200690062007500740065002c0020007300750062
006c006900630065006e00730065002c00200061006e0064002f006f0072
002000730065006c006c00200063006f00700069006500730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002c00200061006e
006400200074006f0020007000650072006d006900740020007000650072
0073006f006e007300200074006f002000770068006f006d002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f0066007400770061007200650020006900730020006600750072
006e0069007300680065006400200074006f00200064006f00200073006f
002c0020007300750062006a00650063007400200074006f002000740068
006500200066006f006c006c006f00770069006e006700200063006f006e
0064006900740069006f006e0073003a000d000a000d000a005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000a000d000a00540048004500200053004f0046005400570041
00520045002000490053002000500052004f005600490044004500440020
0027004100530020004900530027002c00200057004900540048004f0055
0054002000570041005200520041004e005400590020004f004600200041
004e00590020004b0049004e0044002c0020004500580050005200450053
00530020004f005200200049004d0050004c004900450044002c00200049
004e0043004c005500440049004e004700200042005500540020004e004f
00540020004c0049004d004900540045004400200054004f002000540048
0045002000570041005200520041004e00540049004500530020004f0046
0020004d00450052004300480041004e0054004100420049004c00490054
0059002c0020004600490054004e00450053005300200046004f00520020
004100200050004100520054004900430055004c00410052002000500055
00520050004f0053004500200041004e00440020004e004f004e0049004e
004600520049004e00470045004d0045004e0054002e00200049004e0020
004e004f0020004500560045004e00540020005300480041004c004c0020
00540048004500200041005500540048004f005200530020004f00520020
0043004f005000590052004900470048005400200048004f004c00440045
005200530020004200450020004c004900410042004c004500200046004f
005200200041004e005900200043004c00410049004d002c002000440041
004d00410047004500530020004f00520020004f00540048004500520020
004c0049004100420049004c004900540059002c00200057004800450054
00480045005200200049004e00200041004e00200041004300540049004f
004e0020004f004600200043004f004e00540052004100430054002c0020
0054004f005200540020004f00520020004f005400480045005200570049
00530045002c002000410052004900530049004e0047002000460052004f
004d002c0020004f005500540020004f00460020004f005200200049004e
00200043004f004e004e0045004300540049004f004e0020005700490054
0048002000540048004500200053004f0046005400570041005200450020
004f0052002000540048004500200055005300450020004f00520020004f
00540048004500520020004400450041004c0049004e0047005300200049
004e002000540048004500200053004f004600540057004100520045002e
000d000a00>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc04087720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab64550f642f6402633862556138
60555f385d555eab5d555c385a555bab5a550f5a2f5a020c593858555703
251f5638545555ab54555338515552ab51554f384e554e03251f4d384b55
4cab4b554a38485549ab4855473846554503381f001c101c201c0310b8ff
c0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a
1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f17
cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446b8
ffc0b3163f4446b8ffc0b316313546b8ffc0401f162326460f15010f151f
150245ef1501860003012001010001100120010308b8ffc0b401151f4603
bd0100010000050001019000542b4bb80800524bb008505bb00188b02553
b00188b040515ab00688b000555a5b58b101018e59b101024354b0144b51
5a58b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358
b20340401d42594bb0ff5358b20300001d42592b5e7375732b58403d0011
e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f
0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8
ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d304600
03012001010001100120010308b8ffc0b301151f462b5e7375732b2b745e
732b2b5e73742b73742b7374745e735901755e73742b2b2b2b5e732b5e73
2b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b
2b5e732b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f
73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402
830064028200640281006402800064027f0064027e0064027d0064027c00
64027b0064027a0064027900640278006402770064027600640275006402
740064027300640271006402700064026f0064026e0064026d0064026c00
64026b0064026a0064026900640268006402670064026600640265006402
64006402630064026200640261006402600064025f0064025e0064025d00
64025c0064025b0064025a00640259006402580064025700640256006402
5500640254006402530064025200640251006402500064024f0064024e00
64024d0064024c0064024b0064024a006402490064024800640247006402
460064024500640244006402430064024200640241006402400064023f00
64023e0064023d0064023c0064023b0064023a0064023900640238006402
370064023600640235006402340064023300640232006402310064023000
64022f0064022e0064022d0064022c0064022b0064022a00640229006402
280064022700640226006402250064022400640223006402220064022100
6402200064021f0064021e0064021d0064021c0064021b0064021a006402
190064021800640217006402160064021500640214006402130064021200
640211006402100064020f0064020e0064020d0064020c0064020b006402
0a00640209006402080064020700640206006402050064020441ff006402
03006402020064020100640200006401ff006401fe006401fd006401fc00
6401fb006401fa006401f9006401f8006401f7006401f6006401f5006401
f4006401f3006401f2006401f1006401f0006401ef006401ee006401ed00
6401ec006401eb006401ea006401e9006401e8006401e7006401e6006401
e5006401e4006401e3006401e2006401e1006401e0006401df006401de00
6401dd006401dc006401db006401da006401d9006401d8006401d7006401
d6006401d5006401d4006401d3006401d2006401d1006401d0006401cf00
6401ce006401cd006401cc006401cb006401ca006401c9006401c8006401
c7006401c6006401c5006401c4006401c3006401c2006401c1006401c000
6401bf006401be006401bd006401bc006401bb006401ba006401b9006401
b8006401b7006401b6006401b5006401b4006401b3006401b2006401b100
6401b0006401af006401ae006401ad006401ac006401ab006401aa006401
a9006401a8006401a7006401a6006401a5006401a4006401a3006401a200
6401a1006401a00064019f0064019e0064019d0064019c0064019b006401
9a0064019900640198006401970064019600640195006401940064019300
64019200640191006401900064018f0064018e0064018d0064018c006401
8b0064018a00640189006401880064018700640186006401850064418001
84006401830064018200640181006401800064017f0064017e0064017d00
64017c0064017b0064017a00640179006401780064017700640176006401
7500640174006401730064017200640171006401700064016f0064016e00
64016d0064016c0064016b0064016a006401690064016800640167006401
660064016500640164006401630064016200640161006401600064015f00
64015e0064015d0064015c0064015b0064015a0064015900640158006401
570064015600640155006401540064015300640152006401500064014f00
64014e0064014c0064014b0064014a006401490064014800640147006401
4600640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b007373737373
73742b2b2b2b2b2b2b2b2b2b185f5e00000000>
[7587 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 728 68 <000100acfffa062b050e003c00d6b0852b584010603e703e020d3030172f
2f0a2e18181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1a
b8fff6b30c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d
0a100f014d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc04019
0b014d002436510b18170d2f18312e061f28511f5512550555003f3f3f3f
12173911333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311
393d2f3333113331305d1b401436510b18170d2f18312e061f28511f5512
55055500183f3f3f3f12173911333f30315925140e0223222e0235112301
0e0323222e0227012311140e0223222e02351134363333321e0217013301
3e033333321e0215062b08141f191721130802fe33030b151d14151e140b
02fe470108142019182013072c1b68203024180901770501860b1a1f2619
6d0f1b130c1a080c070505070c080467fb94070a070304070a06046cfb99
080c070505070c0804a62a240c1a281bfc5703a61e2a190b09131d15>WAAAAA+Calibri AddT42Char 
3 1116 87 <000200acfffa03c7050e001c0029009fb0852b58b12406b8ffe8b310014d
06b8fff0b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b
014d06b802114017111d1810014d1d100f014d1d100c0d014c1d200b014d
1db80232b2001125b8010ab306060c23b8010bb315510c55003f3fed1239
2fed012fd4e12b2b2b2b10e12b2b2b2b2b3231301bb10625b8010ab56c06
060c1523b8010bb46c15510c5500183f3f2b12392f2b30315901140e0223
2311140e0223222e02351134363321321e0407342e0223231133323e0203
c74077ad789309132119192114082a1a01152a4d696d4c29b53b575d2c9f
9b4e6746240393619c6e3cfe2e080c070505070c0804aa282207173f5c79
574f6a340efdf9284763>WAAAAA+Calibri AddT42Char 
3 1396 90 <000200acfffa040b050e0036004400bdb0852b58401e102e1137080b014d
37100f014d37100c0d014c371810014d37180b014d37b80233b729401001
4d293f11b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8ff
f6b30c014d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040
173db8010bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b
2b32d42be12b2b2b2b2b12393931301bb22e4010b80108b56c404017213d
b8010bb66c21511755055500183f3f3f2b12392f2b3930315925140e0223
222e0227032e03232311140e0223222e023511343633213216171e031514
0e02071e031713161601342627262623231133323e02040b0614241e1a21
140b0477152d3e543b7309132119192114082917011331411a4b734e2723
425c3920342d2814740e08fefd4450193f3391a84463421f1a080c080404
09100c013134573f23fdd9080c070505070c0804ae271f05030d38566f43
41674f3a140e2b3c4e31fee3241d03854c69170706fe4c213b50>WAAAAA+Calibri AddT42Char 
3 1782 94 <00010047ffed0363052100490128b0852b58b90041ffe8b40f10014c41b8
fff0b30d014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d
41b8022c402b32401314014c324011014d243224320c1b180f10014c1b10
0d014d1b1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d
00b8ffc0b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb01
270037000a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c37
113711163cb8010cb5411b05295316b80129b10556003fed3f123939ed11
39392f2f2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b
2be12b2b2b2b2b31301bb1372eb80127b26c110ab80126b76c3711371116
293cb8010cb76c411b0529530516b80129b26c055600183f2b3f1239392b
1139392f2f2b2b30315901140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e060363
4377a15d416f573b170b04080c080e3350714a385d43243252696e685233
3b6991542b574d3c1306040203060b070b2f445d3a3650341a32536a6e6a
5333016b5b8e633216202218251f161d12072228231e375033374e3b3133
3e54714f517f562d0f191f130b111813121c13091c231d1d304225364e3c
32333d537100>WAAAAA+Calibri AddT42Char 
3 2268 116 <0001003dfffa06e00514003c008ab0852b58b3263c0132b8fff840430b0c
014c2532012f080b0c014c282f0125100b0c014c25250122180b0c014c29
220118200b0c014c2d31012d30012d24012d230137522a5223300b03121d
5212550555003f3f3f1217393f3f31305d5d5d5d012b5d2b5d2b5d2b5d2b
5d1b400f37522a5223300b03121d521255055500183f3f3f1217393f3f30
3159250e0323222e02270123030e0323222e0227012626363633321e0217
0133013e0333321e02170133013e03333216160607058304101c291e1f2b
1c0e04fef102fa030e1a2920212c1c0f03feaa06011126201f2413070201
23010114030914251e1c21140903012902011d030613231d1e2310010526
0e1109040409110e03d1fc2f0e1109040409110e04ab171a0e0403080e0b
fbc4043a0b0f080404080f0bfbc6043b0a0f0804050e1a17>WAAAAA+Calibri AddT42Char 
3 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>WAAAAA+Calibri AddT42Char 
WAAAAA+Calibri /CharStrings get begin
/g68 68 def
/g87 87 def
/g90 90 def
/g94 94 def
/g116 116 def
end
WAAAAA+Calibri /Encoding get
dup 77 /g68 put
dup 80 /g87 put
dup 82 /g90 put
dup 83 /g94 put
dup 87 /g116 put
pop
end
%ADOEndSubsetFont
/NGLFJU+Calibri /WAAAAA+Calibri findfont ct_VMDictPut
/NGLFJU+Calibri*1 
[77{/.notdef}rp /g68 2{/.notdef}rp /g87 /.notdef /g90 /g94 3{/.notdef}rp 
/g116 168{/.notdef}rp]
NGLFJU+Calibri nf
NGLFJU+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
60.4005 40.1643 mo
(MSPWR)
[13.6457 7.32564 8.29918 14.2682 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 2 GetGlyphDirectory
8279 <001C60D8A8C9B5EE31009BDCCF795A466D8124C15D014347F9407EB0FB
B241E8A8957CA16129A2EC88227E659958A61AA9FEC6C8108CF7A5BB9B2B2239
681ED7B0179CB0F4818D986B06892E6834301F1CCEBAA7589C573180DE9EE961
47624026B880960989BA43EE8BC0204978E960BDAFFCA6D12CA2B5B2F05FB267
9410D1076E0EB737EFCA2781737B5CA068039D755B1926E79166C424317BE64B
87E1C023B19C8AE01DB9B569F38356080ADF96B253095582968DC127D2CF4BF3
605CFA8BA5508B06F8C3C730713A304A45BC3173DEED0B23F86418FC162A8C4C
E6C4962E72492A2FD6403432F7B05B417CD839444DB27E2C4C246C4B0DAE5994
3A87B77A95DE2B177A9C95BD8B6200CF3BADCBD73D10F147F14FA88FC2B86B20
9026A7BEF68F866ABAAFDE387BC31F162DB79DA44DA0E1EE457C2EF28A9F648A
4B5F35717326AFF59BAB6CE3778939038A8606FFBD10CB3BA5E4BD2F9D7B71A1
B66A07181FF94CCF1A1E0B06684FB26A26827AFB218A96E6D06F766E11EBFFFE
A6BA4939112A8D46A3E14AA9F025B4C4FB318F936B1FC8E86FA4C9F803D48D9F
C7F5206DD622FDF0D3896E8745E7787E146BCE401A4230A99B1D460122F212CB
2444D21770244B20F78D7C> |
3521 <001C60D8A8C9B5EE3102B1E14EB49F9040075BD685C4B804F730F176C8
E2A295B8C83EB4AFEA1E9CA02BB84B0498AFD91D266DCB1011F124BA17A8494F
865E3DFC5E8320774B64C2E8712F7380ACA6D63B7289CCE3DA9F37B89F7C2A1B
D7F1C8E75C13F9B3DFE559EC6EB5A8656608AA0E3F1B00D59F2C7DF0C02A72B4
943A1538AFBFCDEB6198D783111792CF00FC599166B5E21672EA9D800E6D7A47
6C1DB404DE0A27C5F8A829E29066573C73191BFFE43BD2235E3D5B0E95990F18
C628BB00F0741F73393384BED03E4E86B54A8C573BBC2673C1824AAAFC19F609
5575431BBA51CDF3007140343734C9EBB51DCFD56F52A590542E0BEDC52BEC55
2FF5957B7FAD703BD5CC9EEAB5A388C502AB622A17D7657FCC3D4D827E121803
4873C428A57E613B2325B081D4C0E478E692EAB2AC9AC8C4D84EF8A8D9E36E49
D2060EAA94456E402CCB9A669F17EE90A652C94E767644CA228B964B543750DC
73C4511DFEE1D694928AD2B169813A97B1DFC0275EF87243E47892D20D09F9DE
06DD> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
112.651 40.1643 mo
( W\015\301)
[15.96 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 10 GetGlyphDirectory
1382 <001C60D8A8C9B5EE31026C8B0B4AD82E9AC8B1C255B7A29538DB841A5A
AC890C910E739918C5915828D80FA1C99E218DEA3E178302A8024D6D7842FD15
45CE3FBA646B547C1C2F1A9FE4CE0830356D4DD838091FE1AA20B17596EDDE43
24556A9A9721E100B741C5057C0D5E6D59A49BAACD500282935EF87E9FD68EFC
FB1D193210D8DE633FDE5CCF728C8F9AFD716CB08A5EDFB5320F21E5B7DA2156
49DFED0CDF17E117D5EA2F2FF936FB6256872E9851ECDCE89FEEF1E27EAC4268
9C644362FE1571330266AE6A4A6CA00E2790D17B021B6EF4> |
12749 <001C60D8A8C9B5EE310342C8CAA31241A85786E3A4534FF69A87AF7CD
EA27985074C301D816C4577CF3B6F70089D9531FF4414DD58DC1BE34ED54FCC4
5C7FD6714397FC1BDEADA3D769EC4F987FF50625D93958EE52B6A0B484AB4A4A
7EF2C8BE70DF3179346AB0F9851EC2914D89ED298F52C67FEF68D83C4F751C4A
B4DAF5A002319C237D4FBD49A7B0EF107B3F057F176244A39B6911A25024AFAD
EE34C73D24379AC69DE1B89492508E653941FC38B0B9C65E6B6D2EB906975ABB
8CA0B400EC395CA7FF08418CD68513FF5B429F2C570280288306C415CA192ACE
64F30A7B41A84E586470D1AF7ABCCDFB3FBC9E0FBACD7C9601D48F741F51CA4D
BD5B2D11BDD216EF2E376DFB6DA3584A5CA881667E81896C2BDF94CB1C7FFC2A
94AF6BFF7480FCA33041CAA3D00E84E8338F765875A2ADF5CFE0E471771165FC
749676CD616C40735357DD4B771B459EF09874A9E480344A3F8F9FDB1A74DD92
82C619FB5513B01BC47A21EF1CFE5074773DF6AC33519B7AAB0C6A198D7EB97F
4BC8B3DC309> |
7478 <001C60D8A8C9B5EE312FCC15CC95C4F1C20C3B648EFC1D2DE6413CB472
D0E2AC57AB6EC287CAD6ED3BDBB023442C57BD5546757C95A8E7E5ACB0C9A214
4E71A394931B077AF78FCA4A5ED18AEFB540193CA7DF52CDAE00218A53E728FA
EB96CA414295EAB00BE69B6567B00720885D8B4214DB2F3C2414E2B57DEEE436
445E09369469192836BC38379FA97AA3BD26C828921B3E62F7947BD79B5F834A
4272F892B6393FB2607F2894CE725AE3608B54CB67631A10826A4B9603A98A1D
54274C2480C26BBE3FD6AEAF09B67A8F209FCB81EF91131E0EDACB0AB4E5058D
1A2C1F0BBDBCAA3D4A35C70835E3DB7D846B2FEBD1E638F0B9427D3A0E4C0EA8
36F48BB71BA0BC243082773578FA339DC51FD6FF5010A28193954BF791886DFF
EF3CFA4691E954B357AE65D223BFBD5F7C2B057FF8EC55C7EDE87D41D1974C52
612EF5345B9BA2> |
3933 <001C60D8A8C9B5EE310D71E649F3A8FE02AECA49E63C4BDB4D5A3206CD
65C1FD865E8D6FEA50D4FEDA5C2DB35BCFCDAACCC6CEF642BDABBFC269D908DE
B7645BC46B518D48B47B168E73FC8A84ADA2308B42F47712FC942209A06EE684
17D32A7164E0C80C883C8B5C48C67A22E8E698CAC1088AAAFCA7212818B531A0
33633F3E6578A925E0892E68831A5CA2B39F8C10D9DC30540CC25C0CED2C8C6B
4EBCFC671EDD84E19662E09A1F296847F3392AAC59F63BC92C23470142434953
416236C89B602DC26D22BA80A5BD954BA14720B0B924> |
2597 <001C60D8A8C9B5EE3102F642FADD931D446DE94841B9E5B387049BD670
83B646E08A7025BF6D85F55A2B10C7CB71327676C6330D94914D346ED702D31D
E4C1436DD89EAB4CB15D133BE4896E4D1AFFD188E6A59CF9E1B8964201CF9656
D5A7C57DE4E64BD1F4505242B6418F0E6C5A740BCD0673AE728D807CAE812E93
B0FBE31503ACA7886047DE99105017880F6F81E8C4DAEB6F4F8BFFE4D882D10F
36896EA2C25A> |
2053 <001C60D8A8C9B5EE3102DFD786BC3C99041DEA3E3DEDC02D980F5C47A8
77C0703330F117DF795D51BFF18F3DD09C6C66D01B7E41F3E3616B3636A6A197
CE22160B64223F8FC7C995A6A7BE5C8755BC8FAF6C9B6787CD26596F4788743B
A2E5E12FE11EB8A759216416BD93A79FD7E27DB3FF5EA7F885EBE727947E2C3D
17F78FB2E23CA2FFC9CCEEEDF14B3700021695E6204EF31037395818841E6E14
ED0C7D57BCC19B03D6D4B9867C38A522DAAE6A082D56070914560228A5F94E7C
FAFA1BF20CB085CF1AC7516D730B46A266283DF009B258DE836C5C22288917EA
4A41F053A1A531CA177C822038046CD590BF5B34733E841670E3A3116F508F38
B0BA76744CF2CD4E2F36E461BFE2D1526054467D0CC6B68037345003E11693C7
1FAE6A4D4F10AE50326DC8D9E0F4025382693070B8D26093F700E7CA6819AA87
D1BD15C590A0DF03F36E61CD16C031716F2F40140AAC89A6A52B00A81E01FA36
0179885EAF72821FD61CBA399228C2D7EEBE3BEBBF65BAAAF6B4EC8016BF3C43
15558FB39B83DEA03D62818A92> |
4679 <001C60D8A8C9B5EE310323C73AB086A01C2D0AC335D0ADB174DB4287CB
A3C23700D69D83101A5C71E273F03799490F69762EA75B9D13108011F2535728
99EC6B1452C041740CEDF4EFAFA323FCCBF679420EF1B36260D9341245606250
501A7C81E0B2A878A20A1DD8C6AF370B07E91244079D984C9BA74C5282FD93BF
40856A2138064448E766FBF4BFB51F8ED71F377BD055E526975E33A0B2EC8ADC
99633CA5CB513C4C1A85FC95AD46E86CB68879E289C1F69A1749801079D6BA5F
BE044C856DDE58E3004DFA2E> |
11450 <001C60D8A8C9B5EE310DD3DAC0CED6B0A7FF35175170783EAED3D2BF0
542B17DB5EB3597512A7C4D6A8095606587C7CF1850E122CA7C206F9AB0F4EB4
0CF8E08BE8E156322F8E87182BA6A3CC09CB21D0EC9939CA443BC1D931C2939E
E1EBC5AD89C75D5A462296CAF1439AA6BF7AFFCA51E0A504871CB9A19484E3C9
1F84852DE5AFE9AD49CAA5B787224F6DE0D999B7F2FEA95EFA2773DDCD771B43
4ED563EF5409921DC3F245E66248E14BEC43C8712EFB61297ABE28241FF811F3
CDB59048C3442085232A956424667B830931E0DB7091A8C05C3249B79D2985A2
939005E7D7984185B8CBBAC5A926B7F19420BB91DDC2A751F522F8C5966815AD
96282C31D39A76F7CE880F0EF1FA65696428DE558403A8468F8E91C4117471A7
5E6FD32905EB5197F7F> |
1078 <001C60D8A8C9B5EE310D81FD16647F7D95D0156900CA7CA44BFB9259B1
9D821AA5BA0E27F0C183C665823BE9C85BE4211777A5> |
8535 <001C60D8A8C9B5EE3103E3FA1CAA0F8B2FE87E3B4669710A497AD9D807
3AA86D691CB2878F4822DF516FA53796777D233C5684CE674D83429E2603C3A4
45AAAAD5874C9E4829F2D89627FF39006F311671A44F280C378B54B54968A96F
099ECD767A0A62E5D96171DC98124BA42645164B22C550D5CC84D46E51713E70
7B439FB42029ED54B0378DE00A94E9CB44505158B0FEC52F4EA60AD2A223C127
C10B47548E2167F86E2E85843EB03B7BB2AFCBDE03EAAE1D7E2DA4D498329D01
9720FF7E1571F6BE0BAEE325E922F21B722C55E045D011E469A66B0F86A09160
4C602994DF87EF9A1EEB6D93284C7F7BD933017125C1B229AF0C0130FEEC0423
465E7BF24B0D9793882C37039B9CE77DBF89744B8A38CEFB918C65F2B5C867B7
1E6669518BF28E8EF872BCF52ED377A648AA167A35E8F863664836AA42EE891A
BDA6> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
6.52251 59.8943 mo
(\005f1\315\0356\017]\012%\010\005\022G,\272\0046!W)
[15.96 16.0718 15.96 15.96 16.0718 15.96 15.96 16.0718 15.96 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 6 GetGlyphDirectory
5725 <001C60D8A8C9B5EE31029E3D6748B34024060384A85D7A660EE522318D
D00BFEB9C7B888726C2A87A47492144408F28B4F07E58F77F80B70B8FCD1E692
926E13C0C70A01DFE840F9E1A2A14FA00BF0017006FA66F3A18B2E7116A24A34
1115126BC2AA9E38D40742206F087C2A8D392EBDFA5B1D3DBB4CFA4226B6C825
CCE1EB97E6AB3CE26856C22E1CB1E5EFE11F26C6C1D6102D65BC15CE502AD7CC
2F17A5195E0589E23FC1734F2F9333D363DD87DBC40DCB1AF1713D0F9C09B4AA
B1889F279E0C5B1EB24E28FB414D1337F75B302FDDFB5FC1EAF4B7181D987972
29F6A89D4106E90A126621920874F7F21DCA4027F958641517AEB66AB60F4A13
8F36BC137B127EFF6B87042B66CFC84E106C636CC95B45B62DAB14C1CBD2E62C
186CF5EB5675F6DE3CC3F5638BFFAD5C34C8DBDE1D73> |
3719 <001C60D8A8C9B5EE3100BEA49CC71B37BD721F769C816DF691999688E5
B1C8DEB1393D2C5D181A3EFB7E486811F99FDB085B9A1D680CD5DD7652102DFC
D3CB4044C7022B14E6FE19D1E14DD271115DDA51D9E03C5840873D3C844D8C31
7827E2C52818B45EEA8A57459E8B18E8E74B2E0D44F9AB8CC1FE6C4BEC2E1FD5
E818821EBE0BAACA7C1EEE85D2781E33AE7A85C7933CF81B1B3A167C60BDED57
69751754A5CCFD3C1EC847429B848B0559DD14E351A41B6D37EFC07D5FF4F778
D6422E84E9718BD76E3B3512A9A757EA633B5BF9FACFB699E69F19D176F5C5A2
30BE00415BD70141037E2D5A770AD501735EA8A9BA675A8A4F06CB837B0DE3C9
B183EE7146C3251DF3DD3540061BD407C9D122C4F8DD47BCE795276191A1535A
A083F705609E91E7DDC90DEAB5EBE9E46829CBFF80627BC7275D84EB419BF7AF
007F7D192459807EEA75D721032C99DBB4CE259C6A76E9E1987A8090F262448E
29C678A228E529BF4925B9F5F58E3F32A7F9C6A05540580B752FDB1D3D8A7B66
C65D221187713991498CF01CAD63C573CF3F3A8AB7EEF82752C98B159010E5E2
68944A26818E230D56795EB86CBE35FCD3F690BE6894> |
7119 <001C60D8A8C9B5EE310D783B3057BCAFA96422D080BF66746E74A03D55
F23C1199111B82A76379570D45E76B4B7F4C2FEC8926A171F7A027CD0B482459
A3FDC86F741DBDB9ED2F6F8E12CF660F95BD6CF7D0679D56A8A406F75785E5E6
325F03C114450B591195048340F618EA9ADE3C1FFA299992FB71F9F7CA31CA75
AE48C492E7142775FF27804EF7BE2DF6A00230E1A4CD533AE678BB5201F1D5CA
E2C19EFDDD710E80593C8212AB9764508BEEBD5F0D22181E556C4FE7F90AE088
55F6D52F75698E377DB6A0010AD6D6D97B1F9FD1AE6D4C7F14D6EDFA8B59EF3B
2F79732EB18D41A0BC99D9C2BE75853569883CE11A7D00277E1FD1C871AB209D
AF3904E85A9E99CA44C8D00F5503F235B1FC0379A4AA9748C67F3A0C49DA8154
24B66913ECA4477A8DBC9A5937C5BCA0341C8F444263C9E8B3D62253DBFB34EB
2031B83BDED1AE32A917A51B08A49D35958F618C0622E5F30D08299631CC50B8
4E6DD13DAB43D413161DB3BC> |
9120 <001C60D8A8C9B5EE3102E39FD9D6E65B1DEE72897A2646C25038470F26
F38633B82001A8ACF1E6DFA42A15CE414BCD0D5279BA9C42EDC5EFF8DF5937FA
01024D35E7680B603162ECFC84E82202F64F8B3D3D5E8122DE5BF5B26FC8FC16
7B085EE8E5ABF8A6B2B225EA7F2F9B7C7BBAEDF3561641D026B9D8DCA7C9A3B7
EFADD3D0119CA600B9DDE33F313CD09D3F95C7E581E9B04EF7FD1CEF96AFA785
55C36869188CE915CE7948A2C87C8476B783B23FEE68C9AABC6F4344C127774A
05CCF012B9B01784171F88A70B7457AFEE208AC99A6ECDF127F7320122340E76
F0EFD3E7E7AA9828843B411CFD90E61A863CD528E8CA3EDCB2CEE81AADC78A80
73794A88B06C16BC92E1B34924C4374A46C88F33E6BF5C2ADB2391DF30ADC8DC
46C7779E09F091C87DBF0F5B6307C783E473C9210DEF7C3178ABD7AE244A5D38
F4C164BF9314CFAADD22F6> |
17263 <001C60D8A8C9B5EE310DFB9D8927A0B9165670F2050EABDB123847ECD
04E2B38182BC3358B43A7F42A672952021408080C08652CED65D244240B06E34
9715DE5234D98FB7DEF5F6BEA41FABC1B10D9CFE03120197975F44F42AC18213
213776B48785AA8E9568CC1B69D4FAFB1CA19649B870684589E50128001414D0
9861DB7E2F801C59CA4027027D397E01F4BAF535C3F719AC62004868FB5C320E
0D010FB5503CFBECB9E62070D0EA11EC8BD14448F1500552C2158DE8D3CAFBD9
B088788733EAAD376EF74640A0383660D6D4F9D60FDCCE0C3C54A133078AC9A0
C22E536831765570F82E4175E837737F47645A454CAC93F067EFA22AC3713941
55EA097A90B618D5DA5AE6D99E8B55E35465D40C92FB0CEC6AB586B0FAB573C0
7F08F291BC3DF767052A5E011345B6CA4C193A052B591BB48C5AEA2D0523B964
8B5304B02381D5453E49348EF4D9970523FDE54E0CC482BAFA95C9F5E6145E76
41EC279A555239B3C6F653B72142BF4F5A513C3A9DCAA499CCF9485D0784DC14
9D26EF4EAA4E2A8ABBCC19D18BE15A31F09F72E51744B1A05437C706F6502E14
7FE86> |
18437 <001C60D8A8C9B5EE310337A9785C950E07B7538591DF1676D86808671
8A643AFB99F8E46D8D3A1DBD06C0D71CE35448F29B439BECA5C318A3DC8F2506
D875FA486288B853F0A85EF3C53BCA5C6AB6A597ECD9C4F0FE9E510AAFE51981
8FA2CB6739E83F6658BD76AD866F1FC209415A800680F2EA319AB3F87CEF82C8
2AD55B8EBB26A6E0D68F19DCFFC010D1FE2167DCBB7EDE7436E057D1BCA1C08B
18A1532A8406587F9AA6A947F44316BDF23C77F0B084B7127DE95126BE5BE8AC
938578F2729FD0CED7167BA7CB7A555460A38A95FF2F6EAEFC30921D72B89C64
58529F2DE1949FA1F5430D89FD153B1EE961158D382DF442C63B1DA62EF5BD26
0D119F9586CB6DF8C4854F1DDA96F9F8269B77FFAD465CD384D9BDF089CBAF7B
8641815DA57AC6C4DBA9D5C> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
38.5145 80.6743 mo
(\026]\016\207\033\317#\240CoH\005)
[15.96 16.0718 15.96 15.96 16.0718 0 ]xsh
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
27.4505 101.984 mo
(\024\312+^)
[15.96 0 ]xsh
%ADOBeginSubsetFont: WAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NGLFJU+Calibri gcheck setglobal} if
3 382 4 <00020023fffa047e05140022002600dcb0852b58b90024ffe8b40c10014c
23b8ffe8b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8ff
f0401a0b10014c25100b10014c0d100b10014c0c100b10014c40280125b8
fff0402c0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02
af23bf23cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d11
173911123939113310ed3211333130012b5d2b2b2b2b2b2b002b2b1b401e
2423260c25f46c0b0c18221d230a0d0116040c230c230c121d5212550555
00183f3f3f1239392f2f1117391112393911332b32113330315925161606
0623222e02270321030e03232226263637013e0333321e02170723032104
75080110251f1f251309046ffde66a030a13231c1d250f010801b2040d19
271e202a1a0e047b01df01c23d161b0e0403070c09013bfec9090d090405
0e1b1604b20b0e080303080f0b8dfd7b>NGLFJU+Calibri AddT42Char 
NGLFJU+Calibri /CharStrings get begin
/g4 4 def
end
NGLFJU+Calibri /Encoding get
dup 65 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NGLFJU+Calibri*1 
[65{/.notdef}rp /g4 11{/.notdef}rp /g68 2{/.notdef}rp /g87 /.notdef /g90 
/g94 3{/.notdef}rp /g116 168{/.notdef}rp]
NGLFJU+Calibri nf
NGLFJU+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
59.4705 101.984 mo
(PWRAM)
[8.2513 14.3001 8.66628 9.24075 0 ]xsh
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
113.591 101.984 mo
( W\015\301)
[15.96 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 7 GetGlyphDirectory
18000 <001C60D8A8C9B5EE310254E054C558D1C5F60358514B57E093D25D4AD
EFD395673CBE614F626ED8BB4A0EC185E9445868232164CDFB747A7C9F17D781
67831B9E8AAAA502E86EEE6FE7D6A818E766C2F26493648005DDE7D9116962DA
66228073EA557066C27CCAE53D60073970D324D88D196CB654240FC666B4195B
97FA301A0FF37CF55B0C5B7A46199FDF9DEF8C8103921FA163669F222823F5AF
A46A3529F366FB4F4257D10BAEC9A2693418E779143028ABCCAC01C4B9EF936C
981D43A7DD2E341154B33F13C5BE57C4883B47C8215F92D8F3FCBBCC8AAC4F76
463D81E63B9830AC509AF096DBDDAD984A5EF1811F1C134B70E2411B144D4602
2B0B5B3A4225ABD20F86B67DED5EAC66DB102D54D2BCE67E8FDBDFD183D88F59
B22C40514FE681AFA20B6C4CE215DCD9FB3F682DC1FC06563E730F115F1ED3A3
4BB2E68F62B5CF41A4D58730CE9E3184EA9D457FF43AF47F9981BC212A5> |
17917 <001C60D8A8C9B5EE3148CF95E77C75ED363EB316340362CD9022BF3EE
342887D0272DBCEB052BF8F53F491F71AC86BDA994506C8B659B956703C14B6F
D4F80A02DAD1E146CAB8E7A37DD28D822AAF3546ECFB8A4A38FE3A920336B5E1
2F85B25F285D3747174CB1912908EC5DA98573D8C9F74FFA7180EBA1D32CA0AD
4BEE9FA475E3CCF148E1D4B2BCAB6ED7E9F8712483EC5E7FC54A223D7227AFF8
1BFF83140D6297210D2C17E82997ADE142F0ED7655C33B9B2A8D249EDAF47E9F
CF0796A7CF9224C9353E52AFB957E7451EE8CF82249702EF87BAB0EEC84F237A
D98318A5E38D873228E4E0E7FEC19B34AA7BD5D117A8B2D6ECA45FB28ED85214
8A5EEF1E35E04CF4FE7FF2EA6E8672681020ADC6E06FF03F75CC7E152E2EDCBE
5F2F0C30332> |
3920 <001C60D8A8C9B5EE3102D74309A1E7EB04A5981DB0517A3A2E864D9CC1
B9C5495370C78E3BE166E4A1337C008FA1F5AD06627604C269FAAC2FECB4F517
4BD666324D4BF48330D33C29E82ABEA8BF1E9D87F8AB05206E324E748C18357A
9687404446B8F844D074F986255D870359B40E1A0225CDF71F587E48764FB40F
A9CAAA7EFE0219D93F8A7879B601590329A9C7570465C76719DA8FE47B56ED8C
CED5E621B5963BD3DF91D8F6A1D06AD226406E20AE87857E6BD155ECEB8AF023
A153E064655495993DE10276FCE1D1748D7CAE1B845A2AA14F3F4A76E970493B
27458447DF45AA64A944EF36FCB25B3532C0345CA32A48267427F8EA96602631
B990465BE81AC93812BD9BD5697C6DD92646042A4B7593869DF50671F2B8A14B
ECB459> |
6461 <001C60D8A8C9B5EE3100971C12511E2B9DCBAA66FFB462420542B0B920
649984A028E1E1CDC5CD8DB2615B13D79B67D18401D5F11F00BDFCD4C37352A7
B4641EA32B33B0FAFA48817F97F945C73444876728DD81C159F5DCD261E6A520
698361FCF2157CA2456D3A2F9D1611CDCCFB43EE2AFCFF858219B269B34CB953
B1C860086AAFBAFC61F67DDE9D9DC9F16AE2202A935C3435BDADA9D4833C5EF5
59C37FC7A1268D8D42E51FC430E77508F2382A11C84647C5BF4E063ACC59AB98
677B01EE83329CF21F64127814E52C88E9787743DE0BFE0386A8460A29B5EB68
12954AF90C860E974A7EF51D5E1A34714F0D802590E2501A7148E2AE66AE8720
F912B30F9565F9B270B128FCCC8C47912708271D6AE58C55174346477405EA71
0FC5117FC8D0587940DD95512921D736C60F453310E3AEC06B7BBF8EE718E597
DE0BBCB5DD65206C8DDD21FFC527C4C012E8D36D71068C42E59E8584DFAEAD19
01EAC168818B609AA73BCED66DED5524D7972EA6D366A2C4D502AE4645288541
F8DCE4DF22600FBC7416520EBCB8045CD0C0F28B90> |
7741 <001C60D8A8C9B5EE310D5443E658D56BF4B6FCE4D20562C47E0FF8FDC8
A52407B7AE25F5F99428750A0637A13D0561CDC8E5FF029211BDF7B6F1FB3824
F7AFBFB0D7C6F8BD11B24BA82B682A4AF510DAC941058E2DE05D22F87DADF1AE
E34566A50D0A0224AEF41D8D72C32902424039F4F39EF5938DF433493FABBD53
8D281A1C95FE2C42165F6E713BB3C0E13A939C249B6DB8E966E3514BC36D9820
A945CF2FE88AF05B1F0E346251A2D455CE037E34D54B426F4E39966C4AC8747C
BE18FB4D1B4ECF26CA3E9D34467C16EECE6425BFAB54856D9B6412594CC92188
B77EE5E186554A6DD9B86D841197938C1DD27810695DF02B35ABE10EEC2C251F
3C14FAACD74FC2522FA8899E99CABF0765A9B59E155C7D68A5A0D103A5A1846B
1015034E22A0C44C5D3A56B38B44DB135080B766656BEDDDB6C093BDBFCB38B4
7F80C8BB1C2430D97F428CAFD5302A62F4800D170EDD6A9C66B8A970BC7FBFD1
956F5A> |
16855 <001C60D8A8C9B5EE310268C17650A810607ED1D3F22AF6034C89395A2
4C16F36528B3CC1550DB20AA53B085AE2FF2300DA996EA7FDE636112BD0F2724
7C34E361B5EACAB987E2FDA5D7EC90056C07836CB2DD8AD37F77508AE4FC58FD
10ECAE9C55ADCCF3C69146A3540644D512CD90D6E0BFB20D5F50234427403E77
C18827D427ECD79D4CB9D25B78D1E84B5A8EE9DDFBF5718815F6655F6D267660
9C2AFE3B88E33F221DA2B977C4592C924B6DCB908641CFE86610FB0FC5FD58CE
C39A4266B2A165CBE360943901B09146A714ADC> |
3513 <001C60D8A8C9B5EE3102171EE61A60E54468A89E577509199CE5F9F9D5
B7278D25EB277A2165359D727C08ABFFC85917118E529C7FEAF24D94035B7E95
AC07E99571EF5D398F89553FCD5815A76A052DDF0B8A811FE5175881A54C6EA4
DCA9C8340F24464A41DF33E9B115A04D0596C422F9DB3E762A8BCAB8C7B5E0E0
1E55D8F59329B6B3261E126C3949A450EF4A94E4F39CA96363DB128E85E94805
59F8206AC0F02FFD65F6CE163525F602D405661756D8E341C48EB7868DE7BAE4
DE511D97624F1CD86B1256C1E231A644A95F452BAE12DCFA2DB659080F95005C
0CA4D68B7E636142050720B400A019BE771D4CCB98EA915A89C1C300B3D7BA09
BA3A0D0222C216E6EEDAC92E90465D82A81A32E631F9560EB4A6CC5822FCF417
7742F3DCA2F25BE2CC9CCB9E15A456E07F91A47BC8B6BF726A0DAD1AD5F4FACB
D965E7A10434D4754B90CADEC9DC2FBC6FB86206F294EE538C3804> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
6.52251 121.714 mo
(FPE\375\017P\031=\036=A\3271\315\016\207\033\317\015\271)
[15.96 16.0718 15.96 15.96 16.0718 15.96 15.96 16.0718 15.96 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 5 GetGlyphDirectory
3444 <001C60D8A8C9B5EE31028E276EE73267399A01F7C6216434A21ACC83B8
6DC5A147E235177141FCABFC181C0ACD9FD83784B709A2AC24D36FEDD0B983C3
F66AAAFF1E9101F17C39E1E8CAAE61EEEC75FE608A3DC4297AFAB4FEE7213D7E
A933934AF698D2DFDF95105DBB802D589179940F0FA37CEA886752430B7C727E
01A0C5C8CC3492D4B6B247E57D0AAFC33249EA8259667202AE2429D867AD806E
7B0E475EDCB262FC00689FEA0EA54014CA10C52AE74C5687F4665401387FCE5C
E80123AA94AC4020C11CE94CC5AC3BC20C664F28A1C87CA44BA0E46D58724D5B
CB0E3A4E713D27BE3DB7B968912521C5C1C4B619C5296EB9FD64F8A01D15E72D
F6313A2E47E7C5A324C6DEB99D9CECA2177A19CFA8584544F9AA76FA53F21A45
6E1586D73CB21292AB15E3FD45332B44D46A7A7B7369B3AFD6B2F91790BEC413
0268710587963724F33A288FC20359F00E5C42256F2D33D970B60AF5E7D74BDD
B02DA600AB63A7A4065FFA5704E67A74B2C24CC3791B> |
8945 <001C60D8A8C9B5EE3100971C33F5FB248E19B613D317C27E8FE457CA56
78C7A6B34F13FDCB1E707D48B997DF348A8EAF49BD20EBEE0D889BCFF914CB97
1F10C6FF5725C0FF5EE420331414A96132B9C622464E515B83324ED95A539CAA
43306804EA6126C444DA278BEC639029C3F900E732093A7F9B1C32E9DB04D8BD
23D59EF551BE8E8A946EF0400BA8AF286F38B200055C7B433AC5B74DB18F85D9
9B541ED9B18B020FC58B880C1CE3C7FF28AB7B5C72CBD669EF5A08B1D4BD6C9E
5DF5E67692AB0C457AC6E0E4688BCCEA655A12533C732C52BBF0ED7D206E5623
64D082CFBEE41AF7FD9A804B78B84C153AE1BC34692745A424BABEC6E5B608EB
ABA63EEFD9FF74FA0681852F611BB3C1566D867CA45809126153FB36E72CD32F
3A61FD0BCC4D9E5B89F8B1341A7684747EEF14B8DC016A> |
10812 <001C60D8A8C9B5EE3100B613D9B29E9EE835DF8E7BFDE18EB4636527C
A377ABB0BA6928F75EF807B454AA876150B2DA803B990DD7425762FE725D926A
CF17610E320521F1B22BB656D79FF6A1036237E44755D655119BEE9B0BF22089
8DD28342B02BE91D95D99B4BE756B9E2FFEDC78606D1E324C1194449D322F685
3C238B6678485997932DDFE7D36EFEDCDB63A55119FF5BFD549616621DE36178
BD5C20DDF9FDE2DA5229ADB27B31A451F1BC0C326C3C7EB55AE9E28047F8A8C3
6198693B6BF7558B25AA86ADC776B0B36691860725E3DB068BD164084F304949
6C9796C415362CF3C765560F2B4BD42CBD401B94C1EA0835B43AA67BBDF4C920
5AD9A7DD07267BC292FE66892536CC7C2361A8ACA7F8941D2B8E09F1480D4BC6
013A1607437D57AC7EDEBC49D57F744DBC9AE04F9D6056F03FF0A05D580E28F1
6AB711647066FBF3F75CA35ED078532B63977DABFB8262D8B> |
14131 <001C60D8A8C9B5EE310DDFA5C8B48FB9C30FB756397F9704B938CE7EC
ADC479158ED48F4098C50C0A2B820C3317CD1B1B6DBDC243AF9966F0EBAD533E
22FD9488DF4FF7637D45B5F23F1A87AB54B979BABF86EE3692007A9CB6C9C0BD
13590119561A0EA1DEBBE4918DAEC2C81406585A8C061C37571DD3ED6CAFE83D
0F20BF1DFDB7CE3A7B3C8CB41FE35DCBB928A1B8EF557EFE9B610DA340EB3E8A
C32EFC9E5BC7AF1F374C1A6EE1D89D5053EC43C50BA0715A65B5F9885F5B7E75
E79569B6AC66E3D170FDD2136B468F5767687273BB38CDBC5FEB0C1BB96F7B42
C5C7A3B2F35B89DB5BB42527704CEF6E0D74383E3E45BB2811C5EC0222A1C842
0AA48860794CAA0FD0431FB84D56BEFDFC688F7CC36F09C550D4E945A9044F5C
297658F6684A63D1847A02B8E2293B97133699ABC47FAD32024811EAB6247749
FB1A4F3E0486988B6E0843DF051F24DA99441C7631DC8A0239BAAFF937978CD3
536B6747BA0D370DF68AE61CD8AC82DE53D4E058E374E1E216BE4391A641CA2E
C72E012E256BDF0354F5BB4D4B07A5B9C6167F97149B741462A2CC12C75D6532
7C15108511475A2AC2EF6B2DED036CDB3B1B51822295CEE> |
2257 <001C60D8A8C9B5EE31033B73D4CCE0BCD1A120880AFA67CB984D8C4BA4
00E298BF509482154CF1C787919F5BABEEE1B71824ECE7C5A89B067B7B72D658
1B86D972809567DDB3EAC997F7A44E9644967500222DDB94888640E1CF381449
E0DA225F4D29118C4B81B36AF4360E1D0CB7D286BA3CAE821DF0B5A6E6F2F78F
15D48D446FA0D1953727523D9DBE8AA4C262FB92D7AE462B27ECE1CCD7768788
C7BC8798431E1B0AEB3454B823DEA50813867DF001114E89487479C7A1E3C908
BBE8F4C3DD4D45F1ADBC57> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.984 0 0 -15.984 0 0 ]msf
46.5305 142.474 mo
(\015t"\361*<73\010\321)
[15.984 16.0479 15.984 15.9359 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 2 GetGlyphDirectory
6662 <001C60D8A8C9B5EE31030001195AA72B56DF1B80424E376F67D9E8496E
03BCBDB50962832ECBBE6AC8715E37BBEE2EC02D395EA248A44977392F127B5A
D86F51FF7E64797AC3DB359571C9B18AB3DB972F489DDA06361CE923D4BAA6C8
2C2DE384965922E445594AD2F5782D89DCFFD40DB59AB13638982A3273B9D516
D6F5D14BC972E011B46C02E204409FEA0673B01727C59A862EF2C179D8105FB8
4D942C37176763D4EE576DDDEDE8A0D70AA8EA2B1D6DDC3CD96369C4258B8154
E4D2D0CED42451D86E53FC3CA4D8AC96613BCE862867E923D33F47553F737A73
00A7C6DD10D76BC218469E8A2829AC2C6359D2E9201AF28AA1203FB4A1AC2D12
CFE2571469D73CBD895BC5C4F1C7034829A208691B756C04290318FD3991ADC9
DF06E57F66C57042471DD286B3B2C4BDA5D127CAF60481ACFB002014575B917C
C515A4BED5665C1F46125A3A8A2D04FC0EB1E4BBA6430901D40800B2ADF7B840
293CF9FAAA1DCE181202D7656D5398D138F08FA5322CAA93B9D61149A1691FAF
46722D> |
2096 <001C60D8A8C9B5EE310D75AE74AB431FF892CC2DB8D33F22FC5298E2C6
16B22A5EDCD0617B665DB7F4F5355F27C308EC179629312F516E28271A6E84C3
18B85E5D5A78F60264280AAB26E4EA9AD6AA0C86D5A12ABADB4FF38008B7C5CF
6391E8B1FB94D6F2AFE656DB87B57D1A3082BF2A24B570FFB13BFCB19E1C862B
39E083684C3720305B3D76840AF704B41871035E895C072848DC01A6B0CDBE17
779548AD978F019878AD4D04D9EDDD32EA007C338CAF521F41B0B5> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
496.961 16.6943 mo
(\032\006\0100)
[15.96 0 ]xsh
NGLFJU+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
528.951 16.6943 mo
(PWRAM)
[8.2832 14.2842 8.66626 9.24078 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 3 GetGlyphDirectory
8810 <001C60D8A8C9B5EE31029E3D8D14F17204E8EBFEDA684A3E8F0A2A5C30
BE771CEC995033D3B29BE8506D696DFDA7417F47D793AFB3059AE52EAB558049
FBBC27D2C81C393FDF4FD1DF75661C973503D68CC424131716132EF1773F869D
191967EE6B2DAD7C302AA0C7A4E83E8B161129D6D8AF6FECA05CA0C1A03F748B
888B1866F032130D4E7B48C1A23B17A317FF91D036597D2B3E1CF49D30F7E229
C99F7A56D291EE40606473E7EFEA58ED2ACE73A98A723B3F865786EF6D93EA9D
BB13EAFD3529491B820AEDF7EE3CAB7203881443BD67689D7AABAA> |
5289 <001C60D8A8C9B5EE310DAAED72A72CEF8158B90CDE2C72DD69AC9CAFCD
3EB52EF203BB63EDFAA227683F3A6414CB752ECF96AF7886011D44CB1169B9E1
D475BC71390B16A8CCDD7A9EEA4803DCA55C745E746E24280F082B56D9DD1E71
9FE66C1F6B4AACD4521F575B2DBBE0A4F4A11D8361D0098BD35505C9E57247CF
A7D81A6F0B14802B3BEFF9CA2E9EBF0397ADBA797040138F0F7C4FB2BA97567A
EC32CDB66B7AB96786FB2907BD4E3BF9A14621B91243CA2374A7D9481E645EDA
50F6C8> |
11556 <001C60D8A8C9B5EE310323C9B28875EDE059CA81E8D85FDDB4E89DD67
349DFBD83E40FC91155751CEDF95C2CE7883A9B4CA34E00027F5F5E49F3152E6
01D1D17E786E951E8ADD605250B753BAF40C10954F70BD4A7726D41165CDA102
3191B65B1F5398DE548FE066DE3CAB98C> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
583.101 16.6943 mo
("j\024\251-$\036=)
[15.96 16.0718 15.96 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 8 GetGlyphDirectory
2108 <001C60D8A8C9B5EE310D3FE925678F1F2B4195A3C4FCC3729353A99B1A
1E4C52FD84341B04C05B4CB6E82075E045F834EAB548519C6697BA4895BE5505
86EFBC3E0E1A4C04D89209D8A08DB7169CFA185EFE01D787237314749620D311
BA7537B1A0E71D6E8562BE9230D5AA1ADFA3CA1E8407C0A3B4E70D1DB5FD4F30
473EF94C51380B1FECA745F9912AFB89912926C91B319D273058BCA4BFA207E6
EDFF8F41B13F209C0D53B4D80F42833BF1D8D8E9CCD54B7C3780A525D2FA2BCF
8DCDB309C527406E72C5CFB5EA97DC9A07E542805D0E42CAA41D93487A4005F0
CD2E79AD7080DBAEED41A4624FD285FEBA1407375EC2DBC498AA41552CDE2553
8F0DFBD004E610EA5363E41F600EA754E1CB85467EDD09BD92A09D> |
7622 <001C60D8A8C9B5EE3100BADA6891B9B0AE86EC724332732D4113E03E07
FF2E819202AD0D86487BD4D219FD4DDE6F4239F0C4E6BBD889D914623A9F9389
5FECA883C8954136F5FF60F854EB839DC740857D27A9D440BABE0E8AD398B46B
3DDB888BB937FD755C116C4734DF0340E9E7C5A8302B90C706D123E12EA46017
BEE3CE05DFDEF63DFF3F02DA520C1F2E50EC216ECE2FC91BA08B94EC4DC41C12
158525E0A55E182D72B60E0C1898E55B23D3EC3C2AEE15E1B179E53B8BFF2C18
CD22A22C59A658F81E6A5B3EAF302FDE241A709A25879B8BC5ADE8286CDF4006
A44A1405267A607C7C28201B4FBEFA1E76CD73BD01418081072E92BDF109B420
3C85E940A11F7425827EB6AB382126BA4AB5D47DC0586E192E8D9EAE0D6B3C06
B13BDF5F2C> |
17908 <001C60D8A8C9B5EE310D911372529146786CE111A55AB34E30F566785
69DAD29A9A11363DAF884E3BCADEF4D17FB650E3EDCBCD65C3C505A2940D0329
91225F0A8C415DB649A95250B6F641A0E60195B736AEE8A383778AC3FB1D1795
89CAC7F8D5C672BF311ED96CCDC07E406CBF8A59544402CA174A0CBF89B09C10
828EBA2EF8B54C1215AB284025F2C38020C92BB2082FFAD0C2AB741E8025A8A1
4A60C975DF42A947E6064C7FC745D75A51F8C9B32E9F1A08BD487A1A8AFCE728
83FCE82F71A620638054C59A9FF1B6D8697A1D578C7ADE03D46A2460E6D90D18
2F6270DE0ADC2372BFF5F420C325EE89DB0CC8D2A8C88EC2D90D28D680C766DB
5B2BA5D3693791C5C3456726EB2BF9597D8C7A6BD800BE2C884D36ECB8B79BCB
E58B92F54D812CF361ADA14646F2CB52A50> |
6214 <001C60D8A8C9B5EE310286930A9BEF3465B837A305CD03EB2BD1F8A362
CDC700543DCDD2148F631E0C4582C322389AFEEE4140B465B8CD0599B8501A6F
C28768E26FEC12F541EF4B06A17C056ACAC23DF769699B91DD8C5860664B7FD5
0725DAC3C2A1C910FDBD53F290E345F6BC8A661BE52278C20D18C604615E84A7
C23DBE6190FC5386C4559EA95F7CA9CFB0430B7775CD027B4F9ECF9223EAE600
AB1F4F73E507DCFFFA6DA8152D2A040887EE94C2DBC99C92C9B5289C88A998BE
600704CB0E6A0DAF795DFB1CEBAF907CA28E07610791D1D8CA898232ACF4AD6D
F86707B31FEA315728ED4CD87D2453AD2E2B1364EBD7B1ABAB55E588E8F75EEC
524706B43440803F2C6153EBDC9D59FC9167FEAC69249C4CC7D39F881994F314
DF87D0B4F10F77BE09214E710C45998B406415DE69C21D270C032BDDE3A08301
7F01AE1A2FF18F37A3E336D6ADF4CAD51BEB156BAF10107DE6> |
1965 <001C60D8A8C9B5EE31035E3D411E01FFF89C70A542D93F29CD6AD8512F
A5A12594AC541EA5CE7E146D90F884D5E1A4FBBAC98C64F185D2CF18AC44A9EE
AB2383E208466A587CAFE6229D6AA34E6297FA5145C0E0BA76E5B8C5B19B004B
07372607610966161A21A09F1679160170CFFBED9347FDD5481C57C4310DAB64
4A5456C4E896BC584C44BB2BA07CD9DF101D00D4BD602ADBBC531E50D9939FB1
DAB7DB3CDD15A6451C8AE335CF151E430546E315F585CCDEDB6D6F356AB0A579
9B0068615C5F9BDA546E8EC1D0433D87> |
1417 <001C60D8A8C9B5EE310207FA6D712EE70D33AE6767BE2115FBF5FAB36B
2F4070BA8A8719029AE6053F9477AC86B8044D0D0AEF5939370BCBA32F4FF6ED
BDC79205E93D4E924CD2CCB7F4EDEF4A8D6FFAC0F98C456F1CAEBDBB9B857B5C
3DB4B5CCA32FC7D5E0961C900296283455460AA7370CE76BDA6638D0F9862A93
9D8034BDF8CBDDFF9E1B082500CF263AD1D6D42811B1E30711542AF86906206D
40BAC1748E6BA7B32ABC864D867C9F92E56BDBE31BEFA561E110EDD7DB79B18A
34C3514F15C4793699366B32F2D086B7FBB7366A00C0463D89479615BA1D7B89
81CAF6E58F9E712F70B6EA162CF656B8BE2F2480696EEBDB5345E95111> |
17445 <001C60D8A8C9B5EE310268F43BFC503C71996A986499EF88113406D5F
84A711C47AE1DA589107DE621EBDFFA471F54763DA4CDE6F8897DE7524E73DFD
8323BE9F685FE770049AF48CB982D8080DE1996080694D504A77C28A54D01A76
9DD42E6BF8D0DB2ACC9AD294263DF710940C226C80DDBC03D8AA676848DABD9B
EC628C4E06E38E4D43126711051C6ED4CD227974750BDF8962E0F49A2F5E0D34
ACFAB116D43A1651F311E1766B8A93870036D468EF8353AACAFC258CE35E9B49
89645350B9F4F756C205F3FED8120FAD61505BAB68D235396A59262386ABA6F8
C80B7BB0443262C930D83B2DCCE12ADCA437DFFE01B248D72837985E0A1FAD55
B93A8FFFEFDDCA69EBA3715781F810D22677DF29D272DBD43890F5A6F60B8DA8
36525CC0065918FC9BB341D5FC8B7CC840225E500CF53A1AAFA2A3A8948105CA
94BA71321B3A54BEE9D5C83A23610B16AFBE4830F3FA99E471B7E625F4080427
669A0BE29B043A5A01873EB1543295B9DF99594A2FB2455BFEEE0C59BC8A6679
7C22AD3B02D69> |
5562 <001C60D8A8C9B5EE31028E29D0390C1B689198B203474DE96781AA8759
4BAB609DCB621C62E37D9E88658EC81602047CB20B0A1033CD88692FB9229374
38BD2D04EE4C0F97559EE2A7068B242DE3CE7BA5384EBC662D02998A7A7722C3
D112FD31DD94910A58AA4D136C0676C35BCC64E71CA28A29219F08FBF8C178D4
6C9F6E5FFABF21CDA7AF9ED076CBFFFBEABF632DA25309DCB8BC24556CB25653
CBF7CBCC3EBCE90D90688779898B64EEC264709F8E4D630D94AE5DB682EC533B
D9CEC5B4AE139252807CB9CC82BD1BAE2584CB8350AEF6F88347627F29454A76
43506BEFD6EA0D809468C35450F8C87D7DA2FDDA431333351788DF596F3B674C
28FA3656EE2E47BA2FFA766B48A33DB3BC71C72FC6691584941ADAA71B203782
DD7E81B63877EDC0A63FFA75EEFD6BD112CBCC1B23B6F9> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.984 0 0 -15.984 0 0 ]msf
484.031 37.9743 mo
(\010<\035\306E\364\030F-$\036=,\272\007\255\005\211D%\025\272)
[15.984 16.0479 15.9839 15.936 16.064 15.984 15.9359 16.064 15.984 15.9359 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 3 GetGlyphDirectory
1284 <001C60D8A8C9B5EE3103BB3842F6D64C89857BD081CD8DEFCACBCB573A
B7DEE8E3BB817B2C0AB0F3BCE973DCD806C577E81D5A3C9971A24779F3E48E12
0C31CC8ACE0AEFB004484F98257937D778EEC0405715A89340D0CBD2AB5E55D0
9BFA603BD01CB1D64EAA3DC47CDDCFE94991C14FF5910A154CB37CD8E5F8B943
8C1EFBFAAEEE93CEACF5A60FB7A75D0D21B0317B3413E0322DC8D6C43991C6AF
C4A1D588E58B11814186B05DEF521EBD151E67B1CB3FC265A15B37A32D61BFEF
705833> |
1245 <001C60D8A8C9B5EE310356A8912417F054209B2F79253B6EFA6B48DC46
00BDB7A567974ACC71221E1DCB8CCF392CD1218E08FEF748647111D8CEA23A4C
FDCD685CC2D236F0623F33FBB492F5586C4D6853B2E30637EFEBDA6A3F1A1230
3673CC572E0DB372EEDE120B1B7D597288703BB8328C672E6F541CA3B50EEFBB
00C877B772D7D999FA8D207C11F768CCFE17AE4F9A79AFDB02565C7E5DF0E8C1
6CC040D192BA399AFE08A26A02E0BEEB906449D34CB6046C195D959C9DC3B8A4
22BC07D8CB446A02863B9E8D> |
1104 <001C60D8A8C9B5EE310DEB874CE79D17384213038E074825A9418F33EB
9143721861D20A01964EC3074433FE0C7E6A94E022B4A2825FA1AEDE886A5304
5A8529FC4352B9AD8EFE113A2F6BCD50F5FC67967D027273A2862A6CE1788683
0873B4BA1029FD052D94A93A238D40ADEFEF2EC85C1CCC8C51EA0FB0C6BC769D
1530A4A6336DC64C2F7E26594FB33BF929428201B92FB811AB25338FB9198101
CA4DFAEDAF0188D26C6C3BF1F7A0432D4A899529> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
551.351 359.914 mo
(\005\004\016\207\033\317\004\335\004P)
[15.96 16.0718 15.96 15.96 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
573 <001C60D8A8C9B5EE310DF00941140920BFED963106F900403AC25542DC4
B7359> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
631.361 359.914 mo
(\002=)sh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 4 GetGlyphDirectory
11093 <001C60D8A8C9B5EE310DB6385284EBF2DCE7B8838D934515D6758C280
7274ADF33B4AA7C752BE1AC9BCC98AA6873601197980A8B760BDC4DE0C79B350
6F25C6BB839D82FE6B95B5FA6991FFF0539941CA7028BC17B6D9E1AAA98BD6A7
3DD6B32B856F7FE42B7CC898AAF75A8EFF5A2A813E3AD1E78115522573A11956
1DD29866BC74331DBF0FFFEA648FE4C676CAC7FD4FB8BCD52D690BB382AA4694
C65F55E97232B7DF1216A0E4987B013211CBD3A1994D8C174855123319BB2CF1
3948B9AC862DA993718B430D18873BDEA20587B> |
5687 <001C60D8A8C9B5EE310D507B87920D31128F1F83ACD2F9AC9A5D5A782A
CEC27B6F7BF9DF87DA0FE29CB1970097DEB9C54DE2856DE590066C1D3AFFC500
4AD471AFF94FE71CF2B8B148F46B60BEC03828E863053324EE2E1A5C2148A5F3
9286A2D295312DE5171E67F188E35F982FC28876E35CEF1604680F4C376ED189
EC118CE9D207A8B668F7EC26523C6C8EC1830C5F1B9F5AD70039A214602A46E9
865F7239688E71514682A515DC892D1A1085E2DFADDC18BB52386523EECC469D
D8AC24EE2EC3DC82D619540028979266FAA3AD38DA7459ED4EC770BE3D02C46F
569BD3459145FD00F2B60733254F5DB34040EF87717A7C432EF6B346695A2CF0
8C71D4F7A1D14AD98FE50F6B6258E1800D29D8882DC50A0DBC026A9EF3F1DF85
50DE495A452A258414D134BA8DF503DAE6B91E3969E5E77877CABDE0AE228183
3E4DDCC36A0E83B09AB0B278894EFAF96A5798E4CCB18C5EA846382DC3A2C3F8
85391CE4FF9DE92C64E7F1144257BD4E6BCEC4E9935D5F1CB9C03CBDCCEE903B
33D4> |
10725 <001C60D8A8C9B5EE310282C9BA0DEDCFD71AC3C76611568A2DD4CD36F
2D6A7C28DB78341D731A910462E3A2FC76E913C467613E63DF9199A5DB7FDFF3
29B6B2BDFACCF99EE4744A567B4CC213F8FC89CD3D950E05003713BB957770A5
73D4D2B064B591B71D89AA98C2B4015B2A3C33D9BBBF37127B3CF10EF37FA8C4
4EF7819D427F752A429F20701F26E432BB8FAD43C6A89C659D49892949A3013F
F02160E105957AADE1C7552FBD146AE86E0CE3BC508F2D92E7C6A92D417BACE2
0D59D5CA08D415678334440B3A559146A293ADDF8342A7D29418A6666D5B1C35
ED898F6A28D5A5D428FEC80A3DEF98434B6C7DF810F1CE6A49665B23B29E9BAE
27A6888FC6BBC1B572E33DB1530489CF67C97FBB634C3B6ABE3020E590F34F46
182E354E82A7B53> |
3769 <001C60D8A8C9B5EE310379FDFB52825CE6D55CCA7A0382606F62A3F006
51AFF50562593713451064720920E78FA2EEC22C2E8F752020B209AA890B6243
F7965B5CFFC52D535C730FCD470B4CF9337DA4D3C251BCCC8028F994DEDA02F9
9F1679F296C32D06A663A12BD903A9E4CE12E9B9362FB85F425190C491A27111
02201A35696480158A61C352D59916E78F3CDF8401B1D6BB7125D31CE4474002
24F22666CDAF35C7AD5877AAA860763FD17C5C1B79B59EF2CC1E46D95078F170
4622CC10D25590D9DACC26B6B447D0BD7A3E6FAFA726A97ACB6ABCE035039FAA
4E6CE789029A3D9B1DD3E417B980545A4CFCD5D4468BAC8F36AC841997972FCE
23238F515B318420853BB69B608811B677289E827DD419C811F6C129E5B2759B
8357A35E336D73E6C75CF2BC2855F3EA4C19F8C3164CCCB1BF3C4B285E234E41
1D25341743EF0410E8929F6AC31B925C551A8A939CF3AFB9E54949EF2F0450A9
C50B750EDA55E31C52B4D85C77AE34E43BCBFCCE99ADB16081C07DAA70ABCDD2
7E8C8E4FFDF47787BBF04B5E7D7EA360D16493994DF8518B0BD5A8B271B87806
39EF08E66737DCEF5C219DA5343592CCD15688B0DF0620DCED62BE817025BC82
E868> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
647.37 359.914 mo
(+U\0267\)\345\016\271)
[15.96 16.0718 15.96 0 ]xsh
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
711.38 359.914 mo
(\002=)sh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 6 GetGlyphDirectory
1264 <001C60D8A8C9B5EE3138C821674EAAC505C03AA5DBE351BCAEA533ACB7
D15182AB5E90D2EDF6FF6C03D427ACB4E8AF5C3C0DF98866FCFACE06FEC4645A
481B29BCBC2C6874885E66A849752BA8B225269AC0047527550D494442308E45
C4D4CD5741E5C41FC3F7E7137FFA1CF80C26C4DA5735F071> |
12977 <001C60D8A8C9B5EE310D8980D93B413A27D06CEEBE96BDBD388B9B6B7
75ABC664165679755DBFCD658BAEACA63BB1F566CA1419071711D2B72A2DE4A1
33D3450BFDCB410245EDC771236A7CBE3C9B94C7F7F0C0C78D3C975C36F47194
12972D0707E3461B7735ABDCBE416B64F82C6729D9DFAF73D2EDCFF9218D71DA
6FB2692535C3AF00047B4E3EA704868C5C97F07D43BA3E3B1867929DD96D422B
A27D0FEF71450F0F6636B1E691F5639CA1F39F59103F86C1A988FC878CABCA83
241C2747B3162F341568EF5C33C7574520D9C5738A8EFBD9013F4A4CB86A86A0
0C77D3B64420C56EBBD0BB3203C206F6C34EEA98F9E374DBABF972B8AC854972
253E48D62983A631CB484B53910B0ED755B9FEE773B724A6759ED11AFFA77636
9A2712B692A28776C55BD0B5F200DCBFC26893DECA8BFEF771C524C77A4E7185
61670D4FCAC04A1A13EC338558157279048A52B7708CEF1EC0E06FAFE1B70FBD
178F3E8B22B7C46F1F2BFCFA54919720011EE82> |
9073 <001C60D8A8C9B5EE310323C9810F07F46DA74CBB6DEF514E1301C78119
2B56474FAA55E8B854D9B8E5D1D62DC39B525D31528EA219DE7827DB3A643CE0
A02C54654CC0A32990CB98B86CF016F36F65852DC66CDDB9DED8121EA6AAADC9
EA86BBC3005B9702A3025F3B075FE44AC36AAF4712954AF84EA51D2CD82D3AF8
5567A320D3C2B07216EF969B52E170F0B4E2060A27CA32D71D877F140FC0BAAF
89C5A6B5F5AE1A0DBCB1F7FB018A5C7925F837927816A969906CEFDAEEF1968B
0E50D4E2E8F3A862DBB26B21E8D7C86643945636C60DB7729A234CCD0B44F09B
EC692FBE96E515C5F3662F3B706326A6C7BE7811E907F44FB870EC21C4B4C880
8365B624DCEF78D65ABA2ADD55F7D76F007828143F07C966DF35FD7E7C5F40A1
D18A174E6595171AD3B4DBFC60E8> |
12671 <001C60D8A8C9B5EE310DCEE335117D7D23015359A5938EC587D182B4C
FEBF7564AE830E733DA246605E51589851FF71DBE7D47223970E5DAC0CFFCB1B
D0922F2764F4C4F7DFAE393136B5894D8A94E6DC1C0D90077177B4C79DDA628B
1D62183D5FD31FD264884A28B935E269FD0FFF57FC4FEF38872DADF3A5390F78
70F5263E0C0E6E6516A1337B2D0E93A54A529B69ECB8A93C4B1C4F456EB60920
E542ED42ECC8414A3B2832E3305831207BE892E74E01C72AA509E6C41D88ED21
35918CDE3D2CA6AD0D036880553BAF86F736F07119529269DE6E8C9AFD0EFEB1
9FF7954945D4F51A7C8C7EB55732B70949B604782D14BB14693D263765EF9074
785879B2B3B05594B9B50BBB3850318673B7B4B66B58CF51496CD8316D8C8065
56D6229A8127421E535D25133FC700B8D98A9AEC8FF95A39FF345D21DFE56264
965BFC0EBD7CE2A07C11C9C94EBD47926038D6B126FF20ECB5E2F7FC50700F8C
D4A7A48A6C1705194B231E66854F93426D9D782960935D57C27E4FF48880B671
4D0BD1128BBF0AC1DC3A70520F8F60C839AFF01566B11090007834D6AE766B98
DBC936457EA> |
7151 <001C60D8A8C9B5EE313715F70E2BCF9610E7D6901E9474BF3B3E9F9C2C
4AAAEBC13082871E934A9C00F1F96754F00904A3853531C296131FC688694FFC
BBA240F6B88AB5AF278FC307E1073AE18E6FC169AAADCF545160F4E976E99710
9EC02C4DD4DF19A55B57FFAEEC645EABBF650E11161E55CDE6E937FA4E7B9EF6
8EF3B25D73B0BDAF41213A906AC3C6C31FCB8831F57F894A84833A10B118844D
78A33A1554F938E1F1354EDCBFACA804B5DC7ED1027CCD9FCE57481FAF0EAC8B
9655F5AB303841F378642DFFF02B835899> |
19864 <001C60D8A8C9B5EE310D43FFDD7D7A3998B5324857E7288CAFC5B1740
9B1BF39AC668FBA456D68AF0BC7BCEDD542C2D91CF991F56A59EB9C2B6A3504F
F6C325E69DD10FC9807CA5D2E23DDF7A03144CAE89AA4402B83896A059517A87
DB6F984BE18AB8A9B2091A45D39F7B9D2EDF3C853DB151E287FE67306E73AA4C
4ADA2624E26B2348856E14459E31C57921BE59BDCC2E995E55178AB63A2265AE
674AC5C8B8C695F29BE54F13CA00CDA7A5645098A05709162888E6149762BC6> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
575.351 380.694 mo
(\004\3602\261+U#q1\177\017P\033\357M\230)
[15.96 16.1195 15.96 15.9919 16.0876 15.96 15.9919 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 4 GetGlyphDirectory
14963 <001C60D8A8C9B5EE3102FF04565254587C1365C7033AA4A8D88981A76
6D66A15F2636EA0802EA9BBA0F30BC1058758D979729A129EA5BD4243CCD4A29
28755462F84E1FE23F715E0D5B8C105B35301925E25D6259A7568BD9DE85ACA1
6BA5820ED3E4D665B977F1B6B9CD9BE77B677259201E488578C849BCCD86A9B7
AEA15854AC1353A761EE240DC975CB414DB7E9F3268AC28CB8B0970D90AA2B95
42ACB345ABE27B671AB5DF1E9D19BFCEC6B8509FE0990A5D64874F40DFD3FE47
D597C1E377C7FA416E9538516A48600F9CDB7A2C8063756014E0B0903007383C
985402834B368E50818AB1778C6F2BEF40B8599264EB5DB239E7B97B458537A6
3ED35E70F440EB20C8A8CDDF04055BB417F310B63A62F1239200EFFF335DFDD1
F0BD29B0046FD6277474D06FBE6B5BFB0C1AA1F84E945E0C11ADC04501A473C7
13AC146844DA53C3FB987F3542D3AB26933691CBE327300A2249DF5EE77603D1
0723B96C1603937E13BA686B599042CD27D4366287A99C24579C4466196E0EAF
B2B731E3DE9231BAADA4AB08C77433DB6B37281A13A1277962EBDC90F80CBD5C
C8760023EDDD267346528799788015E44CDEC7DD394AAA2759607AF2B7C4C030
7D44703FDF6AAA706C12CEC92D74912DE114BF48A49679B154E3E19F41427AB6
C65421F39E45AD0F2B2D3A7B3A719D076FA37B974FB5400FB28CC2EB75C7D97A
24FE672> |
4564 <001C60D8A8C9B5EE3103E6956716BD9FE8638894D77E46014A737E073E
498E5C06B1E9FE18BEB57E1E670B5E57132B38C51805885C1765CC5FE4F35CAE
9AF24796265C4FDD88D9B1A2A9A50F374B55EF69BC12C70F5D7035E788A82A3A
FBFB7664A4BC71E703AA8691334159CCC51E8E8AE49AE2965F2362AC850ED471
B0158C0DB8296EE5584BC5105CCE3D5DCD7F93CBBD5A43F448B143631F63E8EE
DE067EE546BA054985625608EE91C18048EFC70A3F033DDC91F5076698E0D64D
B1F851699056D189CEB779BDAA176AA36A07C460CB7EC3322BBEE70AC2207256
CB05137CD137834F1A530B70D1399B3BF0F568F7349C45841BFEA3F689704539
32FF0552CCCCCD0E6C8D129EF823D01BDF64E5AA5FFD42BBCE59999DBF8E69E7
C46DF74F6AE88AE518880FD817FF3D0C9B5EED7FDF710400259F8951AA643E4B
BAEEB4> |
7029 <001C60D8A8C9B5EE310222B399D6A35FABDE830324F51A9AC4B6168722
CAC773D52FD85BF9BF8999E9F91617010B8BE0B5A245E65CD76FB63AE5D1A65B
1FD165FD110350D911F6C64D5346BFCB4CD9F338EB202F3835C5A6BE5F312ED3
DE8B09F5F571D2E98F4D6CE63D857331B7D94D9D8FE54BAA73787127CC1990F8
5CA5F49B6DB4179797A3CF26E8A422F496DD8E8DB6EF1F9CE5FAB1C37E5D184E
784A4C6B70DF3D68D4DD926E1E6B469BD82289825EF64B7D0535AEDC818DB095
2B23DE95A87CF8C3B007692BFABF0657AA525583E41096A390B3BA6ACB62014A
0D57301FB2E1852EDF583EDADF8BEF22CFBD19C4A806B637E0080CEC92516C7E
45E3DD9EBA794119400C2348AAEF540CDA6F44B2CE445AE0F67C19C0AD109D80
3BB0168615BD886204F1E230728CAC6DE08BE8D547156717FAD5158BD42B3DA3
7840FCB7BDAE70B670DEC5A2F309EC5929A21437010C37A494301F43CD> |
12684 <001C60D8A8C9B5EE31039C35CC15DFDA5F31BBA9CF8F20821A882D454
DED1BE855425A7981147121AB54EB21ABD1BFED30FA9AD306E204341985EDF0C
F30598DB2985F5A973EC58FE924CA9C4C5C94CABA7992148A674B12F5352BD94
8DFF0CF72690E00CDFF032C7FEBB69A2A083CB92C6AE95F69E4ABC7370785010
2C94ACE846FEAE15BF37BCB772D18E94ABA28951D3485DE59305F08F28E8A725
50DFF9A5BDFA4836FBEE958DB176ADDAFBC5F685160681D6EA6FC41FA1CFBB19
539FEEC8613B6EC7762784F2BEEFCF759334C0D0A8EB78054E6CC1D326E666C5
258124D338F5400D09042BE6E9497B998F0ADB723A795CC8B503E91F8C542451
19721A5D3E7672C60B2661668F54C3E0634BAE0C7D8E264E2AA2129181AE7B8B
58BD5B284E9C9B3F45CF86F6E7A178E0D444230B7B9760ED348646696CE82528
50CB214B88226FE4265833BDD7577C094425DF8861C8735E92F6D6C474C7FB04
7E21A80BC1A4DF24D8E51FE243D4B6B1E50C8031FD8E28D3AB0F504CE54B5D06
17D7FA13BD16A090088495CC6EC99A326C33305C1A1138E10F3C42C7DA99E9D2
1A6E5DDAD314820BF5274C8A1E64BD4C02774F9AACDCF26444CF69FD77ADAC19
787474AAA6F27BA7519BD2B0ED6C0CCE79D8CD67268DCA283D591A8713A77A64
141BAFD1BF3> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
575.351 402.014 mo
(:s\021\324\007\255\005\211"\361*<\033u1\214)
[15.96 16.1195 15.96 15.9919 16.0876 15.96 15.9919 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 6 GetGlyphDirectory
5424 <001C60D8A8C9B5EE3102FF05F8978CF195016C7918E229D66A1989E92A
9C3FB6D90BD94A6B93FC389DBBC93CCFEEFD4FB3B3B71C0C48128C53FB03AFD7
E1605C15B0F6C6412BEA442882ADF6D45D389A9B06D512A96194A021AFB11484
5532CABFC2E53139E865E2BA29204C2899EBBAE14CE420E036EDA4C50A984B4A
43FFA655C614E25FB01150E666421A6863EBADDFEE581A992B50A3CADCAA4541
0D051EA39EC97BB05CE4372392670EDABA3D217F4A4257D1DB785B01CDE95DC3
D9EA17CB4B69240C26E3435D69CBC1399A5684C62549FA8A27D1B29DFF3C73F4
0D5C13DC76149DB2A5140C19F244C789B43783E4469973B16AFA9C0B2FCC5E6B
8323B9B8840A6502AF56DA102F5A55EB6B424DD1B5274BE4AD087D9F8777DE3C
D1715294B6196105B0499FBF8962A58CBFEF983C0F7DE83BED78535B2055CD65
3AE2C060C9A80FA831773F3389F74D66CE60906D10D1ABA6A0C328FE67E9A8D2
E2F33059653C591A986513050B14A55EB1221061C1B05649442DF425C24F4B04
D9E714F6D6D5B70EB79C33EC601DEA0BD7F6E143FF4EB0C1F6ACF1DDB2BD12B9
CDD68DA092AEBC6C5A91B8BA5AD99EDF649360BBC72EE8749A> |
12545 <001C60D8A8C9B5EE31034A5BAE5CB63229DFC3C3D495BBB977738C6D5
7F7BACB9D856B6F85A7AAC2A41816896216CE88A0537310C39B59556DC1470DD
EF88BF272811652BD4528CFA72563A3F738AF1406E59A6D4B1237B9640B4F699
741CC40E75707D399463CA58624F32EC620E7D212853E0DE4BA5E98128EC2F06
3087A292F1F90FF29D53B16253FD318C25982A0C0BB100F4AEAFBCD2D6B507FD
69C260E39A03886C2A575F6E4853C20193BF2A0DDE03A0752E573A1BAABC2B65
B0CF435D041A3656CA1AB54058B1C9B3657468A5074> |
1950 <001C60D8A8C9B5EE3102F64381C4E134CF064917F138B8BF0E2BD101C5
17DF09864849A0C511D0C6B24A69F2E99DA0D281F4FA998648D1F35E2BEF4E8B
3E2C3D1ABD884D644D2A8A5313B69FBE74642315F0A3115BA6E6E7F83F8B6C3D
2880B8E5BFE46D5B3F06EE351FC3305578A8149006891109DE2DB049E41BB54F
22AB398FB2B5E5E1E608B512146B0DA97C17964F813DC618E43E5E2E071588AE
087D5B4C194E3EBA1504346252685020E7CC31A1167FDC1DB7B07CDA2A3E4AC4
A333B8C7C69BF63F38329B2C0715DBBA99AB247C9FD2B7DD7A60CFA73983BEA7
7981854129EC022E721FBD59> |
10809 <001C60D8A8C9B5EE3100AAC5DC82D32C43D410B5C3A59DBD9A0F4748F
EDF7C8B110F099E5BD88CBABDF20B4A5853BCD2E5351E0228C37A1DD1C91936C
D14CA0AFEC6307D687E3B2D481E6579A0B3A85908B8A1C6EB1A3417118ADCC12
E2C9C4BE4412C17597794B45055297F27441FCBCDA7EB4450F75F9330BFA4D72
AFB281E470D1FE879CDADF4B53DFC36544B628311129639DDA9364CF00C2EEBF
1460DC4353A6ECDA07F1223D05F640A33999C4301AF8F73B5CC20BE1069DB7D2
3A60706E28ABB53819B87345A1C761EC38AAFB0AAA8D442E65DBFB7A27BBB11E
817E3B4E80BC83D899FB509E48DBE7774A4FB1E173BF974FE3A8594EA4C55B72
035921DDB3E57F6FAF2F43DCD25C9E4169430882C21461AFCEA73E3752DAE19F
87D48ECFDC4EAFB49C9C5ED2B8BC0F495359A08165E0C7A7EBBBEFEDFF83F9E7
121674495AC9C3EC668BAC9885077ECAD07CD6BC7C463BFAE73FEE2A87024B6C
1EA4DC1CF982C91537E4CA0A9051EB310CCEABF9545DC5903DB79B1BD53E16DD
294690A7ABB0CA8> |
2437 <001C60D8A8C9B5EE310282C88839F56CD4311ADDAD364371F291DD0E9B
27B9427407EF6DF73C451D813DDF8AD9791F8D3E5092D9B7451B248B62F1175F
4C20106092656D7966B9979C49E8B434AAC98838746BD612BC35C640FA3378EE
4528408DC5264C73EABE97901D94282DB34196E2AD6BA75C22FA0890481EFA00
666CA67919AC890E3F3CF8F288B5BC87C5D7ECF95CCC7DE6023FB1E23C5F0665
A2D7D1E6ED09DC7421DF107B87B81E5CB1D3D732303312E4346714CC7DADD890
B65A0002890CC28042FFF2E63614DB762BC5015748E5D3E093FF3A9C321E6E9E
1700FDEA16DB160BDFAF14C9675F94A54204525099644A737207D2F7A8E2F731
B4E1A12FA38126830160232CDC5A43DC095BCABE8B20FB1BB1AF0078AFFE7E94
FDFD1B6F90B8D32C> |
1426 <001C60D8A8C9B5EE3103EE1871811616C9DFBA31B96EB93B7A5CF6C758
612F36AF98D51E81D19D09C6F62CEA79BC0EAF829D965455D0FD153F02FE576B
18BE69ABCAB922C1FDC1752A1644463FB06912161C26EFF8682054E8BA93DC3C
00AA25E9A52FE77B63F95D5A0C154336A7A4DD6C19DA46DB50972535F0C79DE9
D9E46E4E8849F62E8D5214E7511BF3A992E7477B84A8619693845A363460C4EC
1028469D9A2604A59F621F89BE10B7213F7EAD9D66518CF9557D8D88E671791C
E574AA2AAD54EC723CEB362AAFD4440BD8FD0CD1022FFA67A51328BAA655A34F
11> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.984 0 0 -15.984 0 0 ]msf
159.551 422.294 mo
(\02501\001\007\236*9\011\205\005\222)
[15.984 16.0479 15.984 15.9359 16.064 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 6 GetGlyphDirectory
1959 <001C60D8A8C9B5EE310D9D60BD1E60DA1DD6711CD1C489A03986B73ED5
0BB5817A6BA5F1EA6598E78385A6777A9B08CBE788A9817528BFC6E6F587DA60
1E575D36ED8EC91494638EF69E163846E51BA3A04FCCE55729FF793B2A37D5EA
F94ACB8AD5CB630FC2DEBE1F9CA45D028FB50C957ADAB6905F354408DF325B7D
FF89E35B2F7F32E49D42B4E36F8BD27067B16669B7DECF917E0A77619B052DDD
2828A8C84E9E2123C9D4D4620C85D915FF230F273DBF733A62508D29847CD63A
4976A3A8F4E427550683EBAB67CDAFA879FD380D81FADEE04F2B892D452347FB
4ED66139A14FF4875FA05608D8B822F55A6C63EB8E30D921> |
2626 <001C60D8A8C9B5EE3100B613C59279F101B456AE119711183459515B69
AD037C417183C7FAF814E16239661763162A42EBAD7F4BB1CF9BE2325D5EF5C4
F7478F542F7D0B0C6AEAA3A5EFC31699517B7C56E5905B7EB1772B8F7F6482F2
9648B07868C5737F1A00DE8CF555725C7C6700F295D78E3B18C5B932C071751B
F842FC9591ABF2FE8F1FB96A5FF424CAC24043D4DDE49A5905096E885BFC414C
9392013DAD4DCF33AF229DE173D74F1A54B2902233FFBAD4151BEACEC8288F> |
6325 <001C60D8A8C9B5EE310DBA0296D332A6F5BC6B410D6F51F2919F9BFA6E
39BEBA02BBC1651A7A2B3063E387810B4513555D98588D2C11D4EDDEE334064C
E3D6CCD6C25DAB82436620370C182E1A9143EA2FF2DA5AA84900A8E035557C34
7156F9DBF00008750C0FE9B29DBFFD01D6D226BC0636A486972D3AB6EA0247CE
12B30980ACE7C1A9C266BD708DD0D1B89B4877F299B43B677A24D43D6C747C1E
31E57633CBFDE8701807A7B761E9118EBB4258E8D3517EB8608790842DA5FCE8
D781A5562B80B5BB63F052F522E47FAD0B5196E12A9076B29053E9CADF7742AE
85ACF6BC1550CCB2A54345703E1F489EF81BB770256AA7BB2E96932444302C32
03F16173E8D5A3BBEFDD22A331ED07D3BE7C830F0038B02F23F839DAF4B1CE38
C32FB10B75486754C53BE5843E9FFE4BB5122BF8B680C7150065F572E9A06D52
61D648D4B15429E7FEDAF3F2F64EF0F6E93F96E60803F6F1157E62725A8DE351
516441EA8D1B1D25F8172644CCDD> |
6395 <001C60D8A8C9B5EE31009FA92730D1CAE162C90FE1268544EB81E0552A
8C1E66388586BE5CB0F409D2F520705F712FEAC84E549FD2BC801CC3D048F371
FABFB36E6C7286238B00796D69E235F23C5160A18D96BFA78992DF83B2F538D5
83C763EB8FCDD6F90FE5822A8FA951DE9CBC77F1100485D0BE5E4DFCA5C9D6C4
B579AB1914518A8EAFE0FCF8A64415C5B74092B2EAD6547C3E1111CD63598109
ABE82C333E87043476809BE76C4AB9C7CDBCBD554B5C4275B26C2E9119924889
D9C45C90718FC8E540AF3717AE6425FADC3F1D64A5E1A719449DC4A695E25754
6B5C606ECD5030AA964B1A06F958015A15D7B67138F0D1DD9ABAD1A32F293E21
293ED71F31777B06C6B01780> |
17241 <001C60D8A8C9B5EE31029A723E463570C283623FD17D63B9F8EB6A8E0
A80D5844CDACEF5228E7E06482D18A3915D80AFCE3F04A16DD50EC2488D16E9F
621272C300C2A0D5ED626E82A37288173A94840509EBC72F45C438E2F8D374A3
F49E95A6AC4D0ECCBF91F51762AB41A298A6B4B988DB9F9F23A890566C55EB1D
B97363F1B652B144F12112E82E6E129F410C9D7C26E4B19FE8AB966492676C70
509C58E37B6BBEDBD957A5BA7F49C6B4D9A5EC8BBBC9E50B81BD65A80139749E
FE46090BF129554FF9853853F27C2F6080BB7ABA4484B6D3023481E08795CF3D
4C9C4BA9D6248140A1935C576E13A142847DE94CBC076907697E30016A68A01C
E5C27DEAE940C6031432F645B1594FD21BB5ABF337C850045ADBCEF154F33AF6
9D259AA2358A778556E6B8854DA978F3960D1C7A906570B133BCA9803AE5F898
7> |
1329 <001C60D8A8C9B5EE310323C9AE76CFEFB0E7FBC6EA31BDA20A89C35BE4
E7B95B76566A03070054201C96760D2CCE4BB27B765C038E3B54EB3DBCE010D2
637B0E08893EFA56BAD57855DA73F0A2A4A6EEA6BDDA5CA232C986F42B94405E
E5447E25F7685B39C7233F49C120E79088E48D9E86A1DC8804D95C26806BB77E
7132E39DD13B19DE33D58654ACFD8AB8BE44A3A31FA08AEE68364F80DE95E8C6
4FF96D5484DC4B2F37572315FBC801EB7EA288B144A78AFE183C7386E6CBCBDB
564607D9AEABD2ACF5571A7166EBADC10721FA00D2ABF6706AECEC1A71084A68
A76A7F> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
159.551 443.602 mo
(\007\247\012B\030\265\030\373CY\0051)
[15.96 16.0718 15.96 15.96 16.0718 0 ]xsh
%ADOBeginSubsetFont: NGLFJT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NGLFJT+SimHei-GBK-EUC-H 5 GetGlyphDirectory
6622 <001C60D8A8C9B5EE3102D7423FB1ABD7A272E0CEAA603035944DD3BB2C
10EA97FFF88DA0E10C6DB72E42B72244A6D42008C196FB7601D4BBFB8E2C394E
8B1CC87B238F6220B328B495D8EDCAC1B1DE1FA207FEFDFB32275D2B52D865CD
80EEED306B77A252F5E1E0E6A4F16D253FF45190C28629463026984E65A912D7
325AB3222800D0EFC0CD0B3C4A2BEDA27213707C785CBEC7DA226AE788A6340B
4CC5CE1ED9F9F69346E8FC7346B7210B04F8A7FEB9FD34B5ACB028A53F7AC4EC
A0401DCFEE207BD3E0C2699B84F254D5ECE13864FCE4F8D6D91AF1C0DB59FBE2
31CA5ACA31D82BAA6205004BC70A382DC801C4C5FA820DB5E46719B29F4FA414
8D744D3DDE9EE423FE176DA4C45AD32575EB5FBA09EC7F68F6D24D1EEA22B404
969A80FCA80656C1A4E069AF8618B432BA06F63E5210A20648B860B284DC1D48
AC1D1E7754CCD2F6E5ED44FB6F1A7D024D3F5EEA8C246E59DE33265DCC7F6033
99DE7AE4ED640EAC474D1584360AB2F69478C3F71AB3CF38CAB8249C5AF5C10E
378EC8DB> |
2270 <001C60D8A8C9B5EE3103E694BB30B48EFF3BEF50C3ADABA5DC67DFFE7F
6EB01E7A4F950D0F4D370E232E0FD5EA4995360D7B0D720EA4DB302DFA9621E6
791288B10B6455D22136171CB3C0797E888841DA35C14A19EB82D28536693454
F17CFF70CBA66CA8540B5A8956C1BEEB9A39DB038C7C1B6E8DA18082782F6645
C63139E6367C5B4373919D17E5F3DAFE47F53FD45EA29E622AEA7516699DC18C
DE9C2437237163BD22B8157828AE24189152060B0FFA99B5311058E25BD72AE6
03678138C7C164E02AE6D3B18C88C31612B10B1233A7BF879C5A54B32B2B2160
5D6CC835229C87731577AD1B6FE4ECC17A030B7BCED747AB2088C9216B220BD0
74D49204198CE3EB025E971970865EF220315AF8512E7CBEA3DCAA911607BA0F
1E0EACF9260AA9A84E23536B7D90BC5A1E4AFFC1AF43A9E073781F40AAE2FB26
F1C884D3A01F13BA8EDCF57E5CF12274C00596694B59E4CECD1367050D3BBF28
CE561B4B6300EDC4316F50CF> |
1217 <001C60D8A8C9B5EE31033B7C0DC551B955D72D63E6F2EE56252C6F9228
AA6AE1DC705C63B70E14F9C6929FFAA9E9B9484DAEF77588DDB7350919481735
C874C2DB47B5E644A7653B71CDC5841834DDCC1430BF79DBC477A80A5D32A353
A37A4D4506A7D612D96E523AF16BF8CCDE57FD16A3832C17453375BA11A183A9
96759656EFD75B1001752389004DCA5CC7B7553BEBFECD7E0BCF1F02F321560B
674F7F6C6C346D5477CA1623BF9AC74033383B21358F45B4AA1C1E936F6BBAB2
10134022A5E4D91538A4FD739D7447E37B8CC250A2AD75CCD2CD76B93DBBD365
7F23908C8D32A7C59EF904E0DFCBCB68004A43363F658BE5157289804FE5C72A
4B2D34498D663EBB5805C0C9F1091F2590B647474484F1B1C7D4FF6A04EAF3F5
5E7F3193547B9337C8C40AAD6D3FB14C09DED368ECB0949E8B1CA90E7C8D881B
0303A6404C> |
2567 <001C60D8A8C9B5EE310282C9A6ED77F14B5741843116B76AAA5B507888
A894A1CFF11CA26F0A4AE64239E820BD17360950A8C6CACF6BDC5D1578D39FD9
E9CDF446BDB6BC7D57302BCD30E77961C2FCE87089D76B30D8EBC7569A89CBC8
549236B5090075F2D644F07BE8E7B022D77CFFAE63238FDFC890A9A2781A1288
4043B1E8609DCCD1FD990DDF06D30914994F7F2D45B468FA303D47C54DF960C7
65D9F9A1D7630E2EECB0C20B260070BE5EB2A0B6963DF85642F7E444DAE93472
9B0997A61174A14EC3805865FCC06CFC26DF14BDB3AF6C6AD622BD094D6697F0
569218D4A1E8A9B620FCA65E03647F26E668088C013BECC95F6CE5DEED8324FD
3E97BD39E6293E9DE67877456AA0B2CA930D1589451A2E5165015051D73976EA
9E54A16C407216D63C38F9C5A41E6F39FD8EAB2163F41F2014FEA648> |
4747 <001C60D8A8C9B5EE3103177A9197F5F405E60764A1F764563CFE701BC7
B9100653FA34DB0F552426DE50F89E4D4292CED30C989C431F237EF805389104
E4402923DB704A262A05CB9C5D68FD64EEFB3523E6835275EAE2637BA5B012AB
3EEE61E03DCE43378B564709588A3B1E3040021A1308775D71B8AFBB500C3F42
15A601600E8359EEEF3F956E63E9DDE31271B32C8E9AF4FB9D4DF87EE0289FDB
4A0B7AAE7E3AD0B4271588A9D945189F15E55F3A17018470B2C155543B7DDFEE
7A4F72E3094B5AB195FAF3E111C8E0186FBCCF7AA90CFBF2E64663F53BCF0B1D
B58F814BAEA325AC6D75FF4F5BC02859B2073AE608D6B7BC035EAA69079E70F3
086AE09AA70BE745EF26209F300F8E97F08CB1456269081F9411D6E050EE2FC2
A187BB55BC2403A6AA31AE5DB038280B5CFABC9CD301423105A6B62B1F82EDFA
5AAF182D673F348F0DE388> |
!
end
end end
%ADOEndSubsetFont
/NGLFJT+SimHei-GBK-EUC-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
111.521 464.914 mo
(\031\336\010\336\016\207\033\317\015\271\015t"\361*<\004\301\004P\012\007\022\213)
[15.96 16.1195 15.96 15.9919 16.0876 15.96 15.9919 16.0876 15.96 15.9919 16.0876 0 
]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/NGLFJS+DengXian-Bold-GBK-EUC-H-Identity-H uf
/NGLFJS+DengXian-Bold-GBK-EUC-H /CIDFont ur
/NGLFJT+SimHei-GBK-EUC-H-Identity-H uf
/NGLFJT+SimHei-GBK-EUC-H /CIDFont ur
/NGLFJU+Calibri*1 uf
/NGLFJU+Calibri uf
/WAAAAA+Calibri uf
/NGLFJR+STFangsong-GBK-EUC-H-Identity-H uf
/NGLFJR+STFangsong-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
